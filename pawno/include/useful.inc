//Defines
#define SPLITTER                (".")
#define SPECIAL_ACTION_PISSING  (69)
#define DOTS_ADD                (3)
#define BYTES_PER_CELL          (cellbits / 8)
#define NULL                    ("\1")
#define HOLDING(%0) ((newkeys & (%0)) == (%0))
#define RELEASED(%0) (((newkeys & (%0)) != (%0)) && ((oldkeys & (%0)) == (%0)))
#define HOLDING(%0) ((newkeys & (%0)) == (%0))

#define RELEASED(%0) \
    (((newkeys & (%0)) != (%0)) && ((oldkeys & (%0)) == (%0)))

//Array

new stock LegalMods[48][22] = 
{
	{400, 1024,1021,1020,1019,1018,1013,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{401, 1145,1144,1143,1142,1020,1019,1017,1013,1007,1006,1005,1004,1003,1001,0000,0000,0000,0000},
	{404, 1021,1020,1019,1017,1016,1013,1007,1002,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{405, 1023,1021,1020,1019,1018,1014,1001,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{410, 1024,1023,1021,1020,1019,1017,1013,1007,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000},
	{415, 1023,1019,1018,1017,1007,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{418, 1021,1020,1016,1006,1002,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{420, 1021,1019,1005,1004,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{421, 1023,1021,1020,1019,1018,1016,1014,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{422, 1021,1020,1019,1017,1013,1007,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{426, 1021,1019,1006,1005,1004,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{436, 1022,1021,1020,1019,1017,1013,1007,1006,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000},
	{439, 1145,1144,1143,1142,1023,1017,1013,1007,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000},
	{477, 1021,1020,1019,1018,1017,1007,1006,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{478, 1024,1022,1021,1020,1013,1012,1005,1004,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{489, 1024,1020,1019,1018,1016,1013,1006,1005,1004,1002,1000,0000,0000,0000,0000,0000,0000,0000},
	{491, 1145,1144,1143,1142,1023,1021,1020,1019,1018,1017,1014,1007,1003,0000,0000,0000,0000,0000},
	{492, 1016,1006,1005,1004,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{496, 1143,1142,1023,1020,1019,1017,1011,1007,1006,1003,1002,1001,0000,0000,0000,0000,0000,0000},
	{500, 1024,1021,1020,1019,1013,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{516, 1021,1020,1019,1018,1017,1016,1015,1007,1004,1002,1000,0000,0000,0000,0000,0000,0000,0000},
	{517, 1145,1144,1143,1142,1023,1020,1019,1018,1017,1016,1007,1003,1002,0000,0000,0000,0000,0000},
	{518, 1145,1144,1143,1142,1023,1020,1018,1017,1013,1007,1006,1005,1003,1001,0000,0000,0000,0000},
	{527, 1021,1020,1018,1017,1015,1014,1007,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{529, 1023,1020,1019,1018,1017,1012,1011,1007,1006,1003,1001,0000,0000,0000,0000,0000,0000,0000},
	{534, 1185,1180,1179,1178,1127,1126,1125,1124,1123,1122,1106,1101,1100,0000,0000,0000,0000,0000},
	{535, 1121,1120,1119,1118,1117,1116,1115,1114,1113,1110,1109,0000,0000,0000,0000,0000,0000,0000},
	{536, 1184,1183,1182,1181,1128,1108,1107,1105,1104,1103,0000,0000,0000,0000,0000,0000,0000,0000},
	{540, 1145,1144,1143,1142,1024,1023,1020,1019,1018,1017,1007,1006,1004,1001,0000,0000,0000,0000},
	{542, 1145,1144,1021,1020,1019,1018,1015,1014,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{546, 1145,1144,1143,1142,1024,1023,1019,1018,1017,1007,1006,1004,1002,1001,0000,0000,0000,0000},
	{547, 1143,1142,1021,1020,1019,1018,1016,1003,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{549, 1145,1144,1143,1142,1023,1020,1019,1018,1017,1012,1011,1007,1003,1001,0000,0000,0000,0000},
	{550, 1145,1144,1143,1142,1023,1020,1019,1018,1006,1005,1004,1003,1001,0000,0000,0000,0000,0000},
	{551, 1023,1021,1020,1019,1018,1016,1006,1005,1003,1002,0000,0000,0000,0000,0000,0000,0000,0000},
	{558, 1168,1167,1166,1165,1164,1163,1095,1094,1093,1092,1091,1090,1089,1088,0000,0000,0000,0000},
	{559, 1173,1162,1161,1160,1159,1158,1072,1071,1070,1069,1068,1067,1066,1065,0000,0000,0000,0000},
	{560, 1170,1169,1141,1140,1139,1138,1033,1032,1031,1030,1029,1028,1027,1026,0000,0000,0000,0000},
	{561, 1157,1156,1155,1154,1064,1063,1062,1061,1060,1059,1058,1057,1056,1055,1031,1030,1027,1026},
	{562, 1172,1171,1149,1148,1147,1146,1041,1040,1039,1038,1037,1036,1035,1034,0000,0000,0000,0000},
	{565, 1153,1152,1151,1150,1054,1053,1052,1051,1050,1049,1048,1047,1046,1045,0000,0000,0000,0000},
	{567, 1189,1188,1187,1186,1133,1132,1131,1130,1129,1102,0000,0000,0000,0000,0000,0000,0000,0000},
	{575, 1177,1176,1175,1174,1099,1044,1043,1042,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{576, 1193,1192,1191,1190,1137,1136,1135,1134,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{580, 1023,1020,1018,1017,1007,1006,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{589, 1145,1144,1024,1020,1018,1017,1016,1013,1007,1006,1005,1004,1000,0000,0000,0000,0000,0000},
	{600, 1022,1020,1018,1017,1013,1007,1006,1005,1004,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{603, 1145,1144,1143,1142,1024,1023,1020,1019,1018,1017,1007,1006,1001,0000,0000,0000,0000,0000}
};

new ModName[][64] = 
{
    {"Spoiler (Pro)"}, {"Spoiler (Win)"}, {"Spoiler (Drag)"}, {"Spoiler (Alpha)"}, {"Hava Girisi (Champ Scoop)"},
    {"Hava Girisi (Fury Scoop)"}, {"Hava Girisi (Roof)"}, {"Etekler (DX)"}, /*{"5x Nitro"}, {"2x Nitro"}, {"10x Nitro"},*/
    {"Hava Girisi (Race Scoop)"}, {"Hava Girisi (Worx Scoop)"}, {"Fanalini Round Fog"}, {"Spoiler (Champ)"}, {"Spoiler (Race)"},
    {"Spoiler (Worx)"}, {"Etekler (SX)"}, {"Egzoz (Upswept)"}, {"Egzoz (Twin)"}, {"Egzoz (Large)"},
    {"Egzoz (Medium)"}, {"Egzoz (Small)"}, {"Spoiler (Fury)"}, {"Fanali Square Fog"}, {"Tekerlek (Offroad)"},
    {"Etekler (Alien)"}, {"Etekler (Alien)"}, {"Egzoz (Alien)"},
    {"Egzoz (X-Flow)"}, {"Etekler (X-Flow)"}, {"Etekler (X-Flow)"},
    {"Cati ve Etiket (Alien)"}, {"Cati ve Etiket (X-Flow)"}, {"Egzoz (Alien)"}, {"Cati ve Etiket (X-Flow)"},
    {"Etekler (Alien)"}, {"Egzoz (X-Flow)"}, {"Cati ve Etiket (Alien)"}, {"Etekler (X-Flow)"},
    {"Etekler (Alien)"}, {"Etekler (X-Flow)"}, {"Etekler (Krom)"},
    {"Egzoz (Slamin)"}, {"Egzoz (Krom)"}, {"Egzoz (X-Flow)"}, {"Egzoz (Alien)"},
    {"Etekler (Alien)"}, {"Etekler (X-Flow)"}, {"Spoiler (Alien)"}, {"Spoiler (X-Flow)"},
    {"Etekler (Alien)"}, {"Etekler (X-Flow)"}, {"Cati ve Etiket (X-Flow)"}, {"Cati ve Etiket (Alien)"},
    {"Cati ve Etiket (Alien)"}, {"Etekler (Alien)"}, {"Etekler (X-Flow)"}, {"Spoiler (Alien)"},
    {"Egzoz (X-Flow)"}, {"Spoiler (X-Flow)"}, {"Cati ve Etiket (X-Flow)"}, {"Etekler (Alien)"},
    {"Etekler (X-Flow)"}, {"Egzoz (Alien)"}, {"Egzoz (Alien)"}, {"Egzoz (X-Flow)"},
    {"Cati ve Etiket (Alien)"}, {"Cati ve Etiket (X-Flow)"}, {"Etekler (Alien)"}, {"Etekler (X-Flow)"},
    {"Etekler (Alien)"}, {"Etekler (X-Flow)"}, {"Tekerlek (Ahab)"}, {"Tekerlek (Mega)"}, {"Tekerlek (Rimshine)"},
    {"Tekerlek (Wires"}, {"Tekerlek (Classic)"}, {"Tekerlek (Twist)"}, {"Tekerlek (Cutter)"}, {"Tekerlek (Switch)"}, {"Tekerlek (Grove)"}, {"Tekerlek (Import)"},
    {"Tekerlek (Dollar)"}, {"Tekerlek (Trance)"}, {"Tekerlek (Atomic)"}, {"Stereo"}, {"Hidrolik"}, {"Cati ve Etiket (Alien)"}, {"Egzoz (X-Flow)"},
    {"Etekler (Alien)"}, {"Cati ve Etiket(X-Flow)"}, {"Egzoz (Alien)"}, {"Etekler (X-Flow)"},
    {"Etekler (Alien)"}, {"Etekler (X-Flow)"}, {"Tekerlek (Ahab)"}, {"Tekerlek (Virtual)"}, {"Tekerlek (Access)"},
    {"Etekler (Krom)"}, {"On Tampon (Chrome Grill)"}, {"Etekler (Chrome Flames)"},
    {"Etekler (Chrome Strip)"}, {"Cati ve Etiket (Corvetible)"}, {"Egzoz (Krom)"}, {"Egzoz (Slamin)"},
    {"Etekler (Chrome Arches)"}, {"Etekler (Chrome Strip)"}, {"Etekler (Chrome Strip)"},
    {"Arka Tampon (Krom)"}, {"Arka Tampon (Slamin)"}, {"Little (Frontale) Sign?"}, {"Little (Frontale) Sign?"},
    {"Egzoz (Krom)"}, {"Egzoz (Slamin)"}, {"On Tampon (Chrome)"}, {"On Tampon (Slamin)"},
    {"On Tampon (Chrome)"}, {"Etekler (Chrome Trim)"}, {"Etekler (Wheelcovers)"},
    {"Etekler (Chrome Trim)"}, {"Etekler (Wheelcovers)"}, {"Etekler (Chrome Flames)"},
    {"Bullbar Chrome Bars"}, {"Etekler (Chrome Arches)"}, {"Bullbar Chrome Lights 'Remongton'"},
    {"Egzoz (Krom)"}, {"Egzoz (Slamin)"}, {"Vinyl Hardtop"}, {"Egzoz (Krom)"},
    {"Cati ve Etiket Hardtop"}, {"Cati ve Etiket (Softtop)"}, {"Egzoz (Slamin)"}, {"Etekler (Chrome Strip)"},
    {"Etekler (Chrome Strip)"}, {"Egzoz (Slamin)"}, {"Egzoz (Krom)"}, {"Etekler (Chrome Strip)"},
    {"Spoiler (Alien)"}, {"Spoiler (X-Flow)"}, {"Arka Tampon (X-Flow)"}, {"Arka Tampon (Alien)"},
    {"Hava Girisi Oval"}, {"Hava Girisi Oval"}, {"Hava Girisi (Square)"}, {"Hava Girisi (Square)"}, {"Spoiler (X-Flow)"},
    {"Spoiler (Alien)"}, {"Arka Tampon (X-Flow)"}, {"Arka Tampon (Alien)"}, {"Arka Tampon (Alien)"},
    {"Arka Tampon (X-Flow)"}, {"On Tampon (X-Flow)"}, {"On Tampon (Alien)"}, {"Arka Tampon (Alien)"},
    {"On Tampon (Alien)"}, {"Arka Tampon (X-Flow)"}, {"On Tampon (X-Flow)"}, {"Spoiler (X-Flow)"},
    {"Arka Tampon (Alien)"}, {"On Tampon (Alien)"}, {"Arka Tampon (X-Flow)"}, {"Spoiler (Alien)"},
    {"Spoiler (X-Flow)"}, {"Spoiler (Alien)"}, {"On Tampon (X-Flow)"}, {"On Tampon (Alien)"},
    {"Arka Tampon (X-Flow)"}, {"Arka Tampon (Alien)"}, {"On Tampon (Alien)"}, {"On Tampon (X-Flow)"},
    {"On Tampon (Alien)"}, {"On Tampon (X-Flow)"}, {"On Tampon (X-Flow)"}, {"On Tampon (Chrome)"},
    {"On Tampon (Slamin)"}, {"Arka Tampon (Krom)"}, {"Arka Tampon (Slamin)"}, {"Arka Tampon (Slamin)"},
    {"On Tampon (Chrome)"}, {"Arka Tampon (Krom)"}, {"On Tampon (Slamin)"}, {"On Tampon (Chrome)"},
    {"Arka Tampon (Slamin)"}, {"Arka Tampon (Krom)"}, {"On Tampon (Slamin)"}, {"Arka Tampon (Slamin)"},
    {"Arka Tampon (Krom)"}, {"On Tampon (Slamin)"}, {"On Tampon (Chrome)"}, {"On Tampon (Slamin)"},
    {"On Tampon (Chrome)"}, {"Arka Tampon (Krom)"}, {"Arka Tampon (Slamin)"}
};

new MonthTimes[12][4] =
{
    {31, 31, 2678400, 2678400},
    {28, 29, 2419200, 2505600},
    {31, 31, 2678400, 2678400},
    {30, 30, 2592000, 2592000},
    {31, 31, 2678400, 2678400},
    {30, 30, 2592000, 2592000},
    {31, 31, 2678400, 2678400},
    {31, 31, 2678400, 2678400},
    {30, 30, 2592000, 2592000},
    {31, 31, 2678400, 2678400},
    {30, 30, 2592000, 2592000},
    {31, 31, 2678400, 2678400}
};

new aWeaponNames[][] = 
{
    {"Fist"},
    {"Brass Knuckless"},
    {"Golf Club"},
    {"Nightstick"},
    {"Knife"},
    {"Baseball Bat"},
    {"Shovel"},
    {"Pool Cue"},
    {"Katana"},
    {"Chainsaw"},
    {"Purple Dildo"},
    {"Dildo"},
    {"Vibrator"},
    {"Silver Vibrator"},
    {"Flowers"},
    {"Cane"},
    {"Grenade"},
    {"Tear Gas"},
    {"Molotof Kokteyli"},
    {"Unknown"},
    {"Unknown"},
    {"Unknown"},
    {"Colt 45"},
    {"Silenced 9mm"},
    {"Desert Eagle"},
    {"Shotgun"},
    {"Sawnoff Shotgun"},
    {"Combat Shotgun"},
    {"Micro SMG"},
    {"MP5"},
    {"AK-47"},
    {"M4"},
    {"Tec-9"},
    {"Country Rifle"},
    {"Sniper Rifle"},
    {"RPG"},
    {"HS Rocket"},
    {"Flamethrower"},
    {"Minigun"},
    {"Satchel Charge"},
    {"Detonator"},
    {"Spray Can"},
    {"Fire Extinguisher"},
    {"Camera"},
    {"Night Goggles"},
    {"Thermal Goggles"},
    {"Parachute"}
};

new g_aPreloadLibs[][] =
{
    "AIRPORT","ATTRACTORS","BAR","BASEBALL","BD_FIRE",
    "BEACH", "BENCHPRESS","BF_INJECTION", "BIKE_DBZ","BIKED",
    "BIKEH", "BIKELEAP","BIKES", "BIKEV", "BLOWJOBZ",
    "BMX","BOMBER","BOX","BSKTBALL","BUDDY",
    "BUS","CAMERA","CAR","CAR_CHAT","CARRY",
    "CASINO","CHAINSAW","CHOPPA","CLOTHES","COACH",
    "COLT45","COP_AMBIENT","COP_DVBYZ","CRACK", "CRIB",
    "DAM_JUMP","DANCING","DEALER","DILDO", "DODGE",
    "DOZER", "DRIVEBYS","FAT","FIGHT_B","FIGHT_C",
    "FIGHT_D","FIGHT_E","FINALE","FINALE2","FLAME",
    "FLOWERS","FOOD","FREEWEIGHTS","GANGS", "GFUNK",
    "GHANDS","GHETTO_DB","GOGGLES","GRAFFITI","GRAVEYARD",
    "GRENADE","GYMNASIUM","HAIRCUTS","HEIST9","INT_HOUSE",
    "INT_OFFICE","INT_SHOP","JST_BUISNESS", "KART","KISSING",
    "KNIFE", "LAPDAN1","LAPDAN2","LAPDAN3","LOWRIDER",
    "MD_CHASE","MD_END","MEDIC", "MISC","MTB",
    "MUSCULAR","NEVADA","ON_LOOKERS","OTB","PARACHUTE",
    "PARK","PAULNMAC","PED","PLAYER_DVBYS", "PLAYIDLES",
    "POLICE","POOL","POOR","PYTHON","QUAD",
    "QUAD_DBZ","RAPPING","RIFLE", "RIOT","ROB_BANK",
    "ROCKET","RUNNINGMAN","RUSTLER","RYDER", "SCRATCHING",
    "SEX","SHAMAL","SHOP","SHOTGUN","SILENCED",
    "SKATE", "SMOKING","SNIPER","SNM","SPRAYCAN",
    "STRIP", "SUNBATHE","SWAT","SWEET", "SWIM",
    "SWORD", "TANK","TATTOOS","TEC","TRAIN",
    "TRUCK", "UZI","VAN","VENDING","VORTEX",
    "WAYFARER","WEAPONS","WOP","WUZI"
};

new stock VehicleComponents[][] =
{
    {1013, 1018, 1019, 1020, 1021, 1024, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 0},
    {1001, 1003, 1004, 1005, 1006, 1007, 1013, 1017, 1019, 1020, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1142, 1143, 1144, 0},
    {1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 0},
    {0},
    {1000, 1002, 1007, 1013, 1016, 1017, 1019, 1020, 1021, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 0},
    {1000, 1001, 1014, 1018, 1019, 1020, 1021, 1023, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 0},
    {0},
    {0},
    {0},
    {1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 0},
    {1001, 1003, 1007, 1013, 1017, 1019, 1020, 1021, 1023, 1024, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 0},
    {1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 0},
    {1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 0},
    {0},
    {0},
    {1001, 1003, 1007, 1017, 1018, 1019, 1023, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 0},
    {0},
    {0},
    {1002, 1006, 1016, 1020, 1021, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 0},
    {1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 0},
    {1001, 1003, 1004, 1005, 1019, 1021, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 0},
    {1000, 1014, 1016, 1018, 1019, 1020, 1021, 1023, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 0},
    {1007, 1013, 1017, 1019, 1020, 1021, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 0},
    {0},
    {1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 0},
    {0},
    {1001, 1003, 1004, 1005, 1006, 1019, 1021, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 0},
    {0},
    {0},
    {0},
    {0},
    {0},
    {0},
    {0},
    {0},
    {0},
    {1001, 1003, 1006, 1007, 1013, 1017, 1019, 1020, 1021, 1022, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 0},
    {0},
    {1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 0},
    {1001, 1003, 1007, 1013, 1017, 1023, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1142, 1143, 1144, 1145, 0},
    {0},
    {0},
    {1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 0},
    {0},
    {0},
    {1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 0},
    {0},
    {0},
    {0},
    {0},
    {0},
    {1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 0},
    {0},
    {0},
    {0},
    {0},
    {0},
    {0},
    {1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 0},
    {0},
    {0},
    {0},
    {0},
    {0},
    {0},
    {0},
    {1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 0},
    {1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 0},
    {0},
    {0},
    {0},
    {0},
    {0},
    {0},
    {1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 0},
    {1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 0},
    {0},
    {1006, 1007, 1017, 1018, 1019, 1020, 1021, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 0},
    {1004, 1005, 1012, 1013, 1020, 1021, 1022, 1024, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 0},
    {1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 0},
    {1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 0},
    {0},
    {0},
    {0},
    {0},
    {0},
    {0},
    {0},
    {0},
    {1000, 1002, 1004, 1005, 1006, 1013, 1016, 1018, 1019, 1020, 1024, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 0},
    {0},
    {1003, 1007, 1014, 1017, 1018, 1019, 1020, 1021, 1023, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1142, 1143, 1144, 1145, 0},
    {1000, 1004, 1005, 1006, 1016, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 0},
    {0},
    {0},
    {0},
    {1001, 1002, 1003, 1006, 1007, 1011, 1017, 1019, 1020, 1023, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1142, 1143, 0},
    {0},
    {0},
    {0},
    {1013, 1019, 1020, 1021, 1024, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 0},
    {0},
    {0},
    {0},
    {0},
    {1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 0},
    {1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 0},
    {1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 0},
    {0},
    {0},
    {0},
    {0},
    {0},
    {0},
    {0},
    {0},
    {1000, 1002, 1004, 1007, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 0},
    {1002, 1003, 1007, 1016, 1017, 1018, 1019, 1020, 1023, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1142, 1143, 1144, 1145, 0},
    {1001, 1003, 1005, 1006, 1007, 1013, 1017, 1018, 1020, 1023, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1142, 1143, 1144, 1145, 0},
    {0},
    {0},
    {0},
    {0},
    {0},
    {0},
    {0},
    {1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 0},
    {1001, 1007, 1014, 1015, 1017, 1018, 1020, 1021, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 0},
    {0},
    {1001, 1003, 1006, 1007, 1011, 1012, 1017, 1018, 1019, 1020, 1023, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 0},
    {0},
    {0},
    {0},
    {1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 0},
    {1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1100, 1101, 1106, 1122, 1123, 1124, 1125, 1126, 1127, 1178, 1179, 1180, 1185, 1194, 1195, 1196, 1197, 0},
    {1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1109, 1110, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1194, 1195, 1196, 1197, 0},
    {1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1103, 1104, 1105, 1107, 1108, 1128, 1181, 1182, 1183, 1184, 1194, 1195, 1196, 1197, 0},
    {0},
    {0},
    {0},
    {1001, 1004, 1006, 1007, 1017, 1018, 1019, 1020, 1023, 1024, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1142, 1143, 1144, 1145, 0},
    {1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 0},
    {1014, 1015, 1018, 1019, 1020, 1021, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1144, 1145, 0},
    {0},
    {0},
    {1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 0},
    {1001, 1002, 1004, 1006, 1007, 1017, 1018, 1019, 1023, 1024, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1142, 1143, 1144, 1145, 0},
    {1000, 1003, 1016, 1018, 1019, 1020, 1021, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1142, 1143, 0},
    {0},
    {1001, 1003, 1007, 1011, 1012, 1017, 1018, 1019, 1020, 1023, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1142, 1143, 1144, 1145, 0},
    {1001, 1003, 1004, 1005, 1006, 1018, 1019, 1020, 1023, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1142, 1143, 1144, 1145, 0},
    {1002, 1003, 1005, 1006, 1016, 1018, 1019, 1020, 1021, 1023, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 0},
    {0},
    {0},
    {0},
    {1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 0},
    {0},
    {0},
    {1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1163, 1164, 1165, 1166, 1167, 1168, 1194, 1195, 1196, 1197, 0},
    {1025, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1158, 1159, 1160, 1161, 1162, 1173, 1194, 1195, 1196, 1197, 0},
    {1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1138, 1139, 1140, 1141, 1169, 1170, 1194, 1195, 1196, 1197, 0},
    {1025, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1154, 1155, 1156, 1157, 1194, 1195, 1196, 1197, 0},
    {1025, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1146, 1147, 1148, 1149, 1171, 1172, 1194, 1195, 1196, 1197, 0},
    {0},
    {0},
    {1025, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1150, 1151, 1152, 1153, 1194, 1195, 1196, 1197, 0},
    {1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 0},
    {1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1102, 1129, 1130, 1131, 1132, 1133, 1186, 1187, 1188, 1189, 1194, 1195, 1196, 1197, 0},
    {0},
    {0},
    {0},
    {0},
    {0},
    {0},
    {0},
    {1025, 1042, 1043, 1044, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1099, 1174, 1175, 1176, 1177, 1194, 1195, 1197, 0},
    {1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1134, 1135, 1136, 1137, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 0},
    {0},
    {0},
    {1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 0},
    {1001, 1006, 1007, 1017, 1018, 1020, 1023, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 0},
    {0},
    {0},
    {0},
    {0},
    {1001, 1003, 1006, 1007, 1013, 1017, 1018, 1019, 1020, 1023, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1142, 1143, 1144, 1145, 0},
    {0},
    {1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 0},
    {0},
    {1000, 1004, 1005, 1006, 1007, 1013, 1016, 1017, 1018, 1020, 1024, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1144, 1145, 0},
    {0},
    {0},
    {0},
    {0},
    {0},
    {0},
    {0},
    {0},
    {0},
    {0},
    {1004, 1005, 1006, 1007, 1013, 1017, 1018, 1020, 1022, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 0},
    {0},
    {1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 0},
    {1001, 1006, 1007, 1017, 1018, 1019, 1020, 1023, 1024, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1142, 1143, 1144, 1145, 0},
    {0},
    {0},
    {0},
    {0},
    {0},
    {0},
    {0}
};

enum E_SAZONE
{
    zName[28],
    Float:zArea[6]
};
new ZonesList[][E_SAZONE] =
{
    {"The Big Ear", {-410.00,1403.30,-3.00,-137.90,1681.20,200.00}},
    {"Aldea Malvada",{-1372.10,2498.50,0.00,-1277.50,2615.30,200.00}},
    {"Angel Pine",{-2324.90,-2584.20,-6.10,-1964.20,-2212.10,200.00}},
    {"Arco del Oeste",{-901.10,2221.80,0.00,-592.00,2571.90,200.00}},
    {"Avispa Country Club",{-2646.40,-355.40,0.00,-2270.00,-222.50,200.00}},
    {"Avispa Country Club",{-2831.80,-430.20,-6.10,-2646.40,-222.50,200.00}},
    {"Avispa Country Club",{-2361.50,-417.10,0.00,-2270.00,-355.40,200.00}},
    {"Avispa Country Club",{-2667.80,-302.10,-28.80,-2646.40,-262.30,71.10}},
    {"Avispa Country Club",{-2470.00,-355.40,0.00,-2270.00,-318.40,46.10}},
    {"Avispa Country Club",{-2550.00,-355.40,0.00,-2470.00,-318.40,39.70}},
    {"Back o Beyond",{-1166.90,-2641.10,0.00,-321.70,-1856.00,200.00}},
    {"Battery Point",{-2741.00,1268.40,-4.50,-2533.00,1490.40,200.00}},
    {"Bayside",{-2741.00,2175.10,0.00,-2353.10,2722.70,200.00}},
    {"Bayside Marina",{-2353.10,2275.70,0.00,-2153.10,2475.70,200.00}},
    {"Beacon Hill",{-399.60,-1075.50,-1.40,-319.00,-977.50,198.50}},
    {"Blackfield",{964.30,1203.20,-89.00,1197.30,1403.20,110.90}},
    {"Blackfield",{964.30,1403.20,-89.00,1197.30,1726.20,110.90}},
    {"Blackfield Chapel",{1375.60,596.30,-89.00,1558.00,823.20,110.90}},
    {"Blackfield Chapel",{1325.60,596.30,-89.00,1375.60,795.00,110.90}},
    {"Blackfield Intersection",{1197.30,1044.60,-89.00,1277.00,1163.30,110.90}},
    {"Blackfield Intersection",{1166.50,795.00,-89.00,1375.60,1044.60,110.90}},
    {"Blackfield Intersection",{1277.00,1044.60,-89.00,1315.30,1087.60,110.90}},
    {"Blackfield Intersection",{1375.60,823.20,-89.00,1457.30,919.40,110.90}},
    {"Blueberry", {104.50,-220.10,2.30,349.60,152.20,200.00}},
    {"Blueberry", {19.60,-404.10,3.80,349.60,-220.10,200.00}},
    {"Blueberry Acres",{-319.60,-220.10,0.00,104.50,293.30,200.00}},
    {"Caligula's Palace",{2087.30,1543.20,-89.00,2437.30,1703.20,110.90}},
    {"Caligula's Palace",{2137.40,1703.20,-89.00,2437.30,1783.20,110.90}},
    {"Calton Heights",{-2274.10,744.10,-6.10,-1982.30,1358.90,200.00}},
    {"Chinatown", {-2274.10,578.30,-7.60,-2078.60,744.10,200.00}},
    {"City Hall", {-2867.80,277.40,-9.10,-2593.40,458.40,200.00}},
    {"Come-A-Lot",{2087.30,943.20,-89.00,2623.10,1203.20,110.90}},
    {"Commerce",{1323.90,-1842.20,-89.00,1701.90,-1722.20,110.90}},
    {"Commerce",{1323.90,-1722.20,-89.00,1440.90,-1577.50,110.90}},
    {"Commerce",{1370.80,-1577.50,-89.00,1463.90,-1384.90,110.90}},
    {"Commerce",{1463.90,-1577.50,-89.00,1667.90,-1430.80,110.90}},
    {"Commerce",{1583.50,-1722.20,-89.00,1758.90,-1577.50,110.90}},
    {"Commerce",{1667.90,-1577.50,-89.00,1812.60,-1430.80,110.90}},
    {"Conference Center",{1046.10,-1804.20,-89.00,1323.90,-1722.20,110.90}},
    {"Conference Center",{1073.20,-1842.20,-89.00,1323.90,-1804.20,110.90}},
    {"Cranberry Station",{-2007.80,56.30,0.00,-1922.00,224.70,100.00}},
    {"Creek", {2749.90,1937.20,-89.00,2921.60,2669.70,110.90}},
    {"Dillimore", {580.70,-674.80,-9.50,861.00,-404.70,200.00}},
    {"Doherty",{-2270.00,-324.10,-0.00,-1794.90,-222.50,200.00}},
    {"Doherty",{-2173.00,-222.50,-0.00,-1794.90,265.20,200.00}},
    {"Downtown",{-1982.30,744.10,-6.10,-1871.70,1274.20,200.00}},
    {"Downtown",{-1871.70,1176.40,-4.50,-1620.30,1274.20,200.00}},
    {"Downtown",{-1700.00,744.20,-6.10,-1580.00,1176.50,200.00}},
    {"Downtown",{-1580.00,744.20,-6.10,-1499.80,1025.90,200.00}},
    {"Downtown",{-2078.60,578.30,-7.60,-1499.80,744.20,200.00}},
    {"Downtown",{-1993.20,265.20,-9.10,-1794.90,578.30,200.00}},
    {"Downtown Los Santos",{1463.90,-1430.80,-89.00,1724.70,-1290.80,110.90}},
    {"Downtown Los Santos",{1724.70,-1430.80,-89.00,1812.60,-1250.90,110.90}},
    {"Downtown Los Santos",{1463.90,-1290.80,-89.00,1724.70,-1150.80,110.90}},
    {"Downtown Los Santos",{1370.80,-1384.90,-89.00,1463.90,-1170.80,110.90}},
    {"Downtown Los Santos",{1724.70,-1250.90,-89.00,1812.60,-1150.80,110.90}},
    {"Downtown Los Santos",{1370.80,-1170.80,-89.00,1463.90,-1130.80,110.90}},
    {"Downtown Los Santos",{1378.30,-1130.80,-89.00,1463.90,-1026.30,110.90}},
    {"Downtown Los Santos",{1391.00,-1026.30,-89.00,1463.90,-926.90,110.90}},
    {"Downtown Los Santos",{1507.50,-1385.20,110.90,1582.50,-1325.30,335.90}},
    {"East Beach",{2632.80,-1852.80,-89.00,2959.30,-1668.10,110.90}},
    {"East Beach",{2632.80,-1668.10,-89.00,2747.70,-1393.40,110.90}},
    {"East Beach",{2747.70,-1668.10,-89.00,2959.30,-1498.60,110.90}},
    {"East Beach",{2747.70,-1498.60,-89.00,2959.30,-1120.00,110.90}},
    {"East Los Santos",{2421.00,-1628.50,-89.00,2632.80,-1454.30,110.90}},
    {"East Los Santos",{2222.50,-1628.50,-89.00,2421.00,-1494.00,110.90}},
    {"East Los Santos",{2266.20,-1494.00,-89.00,2381.60,-1372.00,110.90}},
    {"East Los Santos",{2381.60,-1494.00,-89.00,2421.00,-1454.30,110.90}},
    {"East Los Santos",{2281.40,-1372.00,-89.00,2381.60,-1135.00,110.90}},
    {"East Los Santos",{2381.60,-1454.30,-89.00,2462.10,-1135.00,110.90}},
    {"East Los Santos",{2462.10,-1454.30,-89.00,2581.70,-1135.00,110.90}},
    {"Easter Basin",{-1794.90,249.90,-9.10,-1242.90,578.30,200.00}},
    {"Easter Basin",{-1794.90,-50.00,-0.00,-1499.80,249.90,200.00}},
    {"Easter Bay Airport",{-1499.80,-50.00,-0.00,-1242.90,249.90,200.00}},
    {"Easter Bay Airport",{-1794.90,-730.10,-3.00,-1213.90,-50.00,200.00}},
    {"Easter Bay Airport",{-1213.90,-730.10,0.00,-1132.80,-50.00,200.00}},
    {"Easter Bay Airport",{-1242.90,-50.00,0.00,-1213.90,578.30,200.00}},
    {"Easter Bay Airport",{-1213.90,-50.00,-4.50,-947.90,578.30,200.00}},
    {"Easter Bay Airport",{-1315.40,-405.30,15.40,-1264.40,-209.50,25.40}},
    {"Easter Bay Airport",{-1354.30,-287.30,15.40,-1315.40,-209.50,25.40}},
    {"Easter Bay Airport",{-1490.30,-209.50,15.40,-1264.40,-148.30,25.40}},
    {"Easter Bay Chemicals", {-1132.80,-768.00,0.00,-956.40,-578.10,200.00}},
    {"Easter Bay Chemicals", {-1132.80,-787.30,0.00,-956.40,-768.00,200.00}},
    {"El Castillo del Diablo",{-464.50,2217.60,0.00,-208.50,2580.30,200.00}},
    {"El Castillo del Diablo",{-208.50,2123.00,-7.60,114.00,2337.10,200.00}},
    {"El Castillo del Diablo",{-208.50,2337.10,0.00,8.40,2487.10,200.00}},
    {"El Corona", {1812.60,-2179.20,-89.00,1970.60,-1852.80,110.90}},
    {"El Corona", {1692.60,-2179.20,-89.00,1812.60,-1842.20,110.90}},
    {"El Quebrados",{-1645.20,2498.50,0.00,-1372.10,2777.80,200.00}},
    {"Esplanade East",{-1620.30,1176.50,-4.50,-1580.00,1274.20,200.00}},
    {"Esplanade East",{-1580.00,1025.90,-6.10,-1499.80,1274.20,200.00}},
    {"Esplanade East",{-1499.80,578.30,-79.60,-1339.80,1274.20,20.30}},
    {"Esplanade North",{-2533.00,1358.90,-4.50,-1996.60,1501.20,200.00}},
    {"Esplanade North",{-1996.60,1358.90,-4.50,-1524.20,1592.50,200.00}},
    {"Esplanade North",{-1982.30,1274.20,-4.50,-1524.20,1358.90,200.00}},
    {"Fallen Tree",{-792.20,-698.50,-5.30,-452.40,-380.00,200.00}},
    {"Fallow Bridge",{434.30,366.50,0.00,603.00,555.60,200.00}},
    {"Fern Ridge",{508.10,-139.20,0.00,1306.60,119.50,200.00}},
    {"Financial", {-1871.70,744.10,-6.10,-1701.30,1176.40,300.00}},
    {"Fisher's Lagoon",{1916.90,-233.30,-100.00,2131.70,13.80,200.00}},
    {"Flint Intersection",{-187.70,-1596.70,-89.00,17.00,-1276.60,110.90}},
    {"Flint Range",{-594.10,-1648.50,0.00,-187.70,-1276.60,200.00}},
    {"Fort Carson",{-376.20,826.30,-3.00,123.70,1220.40,200.00}},
    {"Foster Valley",{-2270.00,-430.20,-0.00,-2178.60,-324.10,200.00}},
    {"Foster Valley",{-2178.60,-599.80,-0.00,-1794.90,-324.10,200.00}},
    {"Foster Valley",{-2178.60,-1115.50,0.00,-1794.90,-599.80,200.00}},
    {"Foster Valley",{-2178.60,-1250.90,0.00,-1794.90,-1115.50,200.00}},
    {"Frederick Bridge", {2759.20,296.50,0.00,2774.20,594.70,200.00}},
    {"Gant Bridge",{-2741.40,1659.60,-6.10,-2616.40,2175.10,200.00}},
    {"Gant Bridge",{-2741.00,1490.40,-6.10,-2616.40,1659.60,200.00}},
    {"Ganton",{2222.50,-1852.80,-89.00,2632.80,-1722.30,110.90}},
    {"Ganton",{2222.50,-1722.30,-89.00,2632.80,-1628.50,110.90}},
    {"Garcia",{-2411.20,-222.50,-0.00,-2173.00,265.20,200.00}},
    {"Garcia",{-2395.10,-222.50,-5.30,-2354.00,-204.70,200.00}},
    {"Garver Bridge",{-1339.80,828.10,-89.00,-1213.90,1057.00,110.90}},
    {"Garver Bridge",{-1213.90,950.00,-89.00,-1087.90,1178.90,110.90}},
    {"Garver Bridge",{-1499.80,696.40,-179.60,-1339.80,925.30,20.30}},
    {"Glen Park", {1812.60,-1449.60,-89.00,1996.90,-1350.70,110.90}},
    {"Glen Park", {1812.60,-1100.80,-89.00,1994.30,-973.30,110.90}},
    {"Glen Park", {1812.60,-1350.70,-89.00,2056.80,-1100.80,110.90}},
    {"Green Palms",{176.50,1305.40,-3.00,338.60,1520.70,200.00}},
    {"Greenglass College",{964.30,1044.60,-89.00,1197.30,1203.20,110.90}},
    {"Greenglass College",{964.30,930.80,-89.00,1166.50,1044.60,110.90}},
    {"Hampton Barns",{603.00,264.30,0.00,761.90,366.50,200.00}},
    {"Hankypanky Point", {2576.90,62.10,0.00,2759.20,385.50,200.00}},
    {"Harry Gold Parkway",{1777.30,863.20,-89.00,1817.30,2342.80,110.90}},
    {"Hashbury",{-2593.40,-222.50,-0.00,-2411.20,54.70,200.00}},
    {"Hilltop Farm",{967.30,-450.30,-3.00,1176.70,-217.90,200.00}},
    {"Hunter Quarry",{337.20,710.80,-115.20,860.50,1031.70,203.70}},
    {"Idlewood",{1812.60,-1852.80,-89.00,1971.60,-1742.30,110.90}},
    {"Idlewood",{1812.60,-1742.30,-89.00,1951.60,-1602.30,110.90}},
    {"Idlewood",{1951.60,-1742.30,-89.00,2124.60,-1602.30,110.90}},
    {"Idlewood",{1812.60,-1602.30,-89.00,2124.60,-1449.60,110.90}},
    {"Idlewood",{2124.60,-1742.30,-89.00,2222.50,-1494.00,110.90}},
    {"Idlewood",{1971.60,-1852.80,-89.00,2222.50,-1742.30,110.90}},
    {"Jefferson", {1996.90,-1449.60,-89.00,2056.80,-1350.70,110.90}},
    {"Jefferson", {2124.60,-1494.00,-89.00,2266.20,-1449.60,110.90}},
    {"Jefferson", {2056.80,-1372.00,-89.00,2281.40,-1210.70,110.90}},
    {"Jefferson", {2056.80,-1210.70,-89.00,2185.30,-1126.30,110.90}},
    {"Jefferson", {2185.30,-1210.70,-89.00,2281.40,-1154.50,110.90}},
    {"Jefferson", {2056.80,-1449.60,-89.00,2266.20,-1372.00,110.90}},
    {"Julius Thruway East",{2623.10,943.20,-89.00,2749.90,1055.90,110.90}},
    {"Julius Thruway East",{2685.10,1055.90,-89.00,2749.90,2626.50,110.90}},
    {"Julius Thruway East",{2536.40,2442.50,-89.00,2685.10,2542.50,110.90}},
    {"Julius Thruway East",{2625.10,2202.70,-89.00,2685.10,2442.50,110.90}},
    {"Julius Thruway North", {2498.20,2542.50,-89.00,2685.10,2626.50,110.90}},
    {"Julius Thruway North", {2237.40,2542.50,-89.00,2498.20,2663.10,110.90}},
    {"Julius Thruway North", {2121.40,2508.20,-89.00,2237.40,2663.10,110.90}},
    {"Julius Thruway North", {1938.80,2508.20,-89.00,2121.40,2624.20,110.90}},
    {"Julius Thruway North", {1534.50,2433.20,-89.00,1848.40,2583.20,110.90}},
    {"Julius Thruway North", {1848.40,2478.40,-89.00,1938.80,2553.40,110.90}},
    {"Julius Thruway North", {1704.50,2342.80,-89.00,1848.40,2433.20,110.90}},
    {"Julius Thruway North", {1377.30,2433.20,-89.00,1534.50,2507.20,110.90}},
    {"Julius Thruway South", {1457.30,823.20,-89.00,2377.30,863.20,110.90}},
    {"Julius Thruway South", {2377.30,788.80,-89.00,2537.30,897.90,110.90}},
    {"Julius Thruway West",{1197.30,1163.30,-89.00,1236.60,2243.20,110.90}},
    {"Julius Thruway West",{1236.60,2142.80,-89.00,1297.40,2243.20,110.90}},
    {"Juniper Hill",{-2533.00,578.30,-7.60,-2274.10,968.30,200.00}},
    {"Juniper Hollow",{-2533.00,968.30,-6.10,-2274.10,1358.90,200.00}},
    {"K.A.C.C. Military Fuels",{2498.20,2626.50,-89.00,2749.90,2861.50,110.90}},
    {"Kincaid Bridge",{-1339.80,599.20,-89.00,-1213.90,828.10,110.90}},
    {"Kincaid Bridge",{-1213.90,721.10,-89.00,-1087.90,950.00,110.90}},
    {"Kincaid Bridge",{-1087.90,855.30,-89.00,-961.90,986.20,110.90}},
    {"King's",{-2329.30,458.40,-7.60,-1993.20,578.30,200.00}},
    {"King's",{-2411.20,265.20,-9.10,-1993.20,373.50,200.00}},
    {"King's",{-2253.50,373.50,-9.10,-1993.20,458.40,200.00}},
    {"LVA Freight Depot",{1457.30,863.20,-89.00,1777.40,1143.20,110.90}},
    {"LVA Freight Depot",{1375.60,919.40,-89.00,1457.30,1203.20,110.90}},
    {"LVA Freight Depot",{1277.00,1087.60,-89.00,1375.60,1203.20,110.90}},
    {"LVA Freight Depot",{1315.30,1044.60,-89.00,1375.60,1087.60,110.90}},
    {"LVA Freight Depot",{1236.60,1163.40,-89.00,1277.00,1203.20,110.90}},
    {"Las Barrancas",{-926.10,1398.70,-3.00,-719.20,1634.60,200.00}},
    {"Las Brujas",{-365.10,2123.00,-3.00,-208.50,2217.60,200.00}},
    {"Las Colinas",{1994.30,-1100.80,-89.00,2056.80,-920.80,110.90}},
    {"Las Colinas",{2056.80,-1126.30,-89.00,2126.80,-920.80,110.90}},
    {"Las Colinas",{2185.30,-1154.50,-89.00,2281.40,-934.40,110.90}},
    {"Las Colinas",{2126.80,-1126.30,-89.00,2185.30,-934.40,110.90}},
    {"Las Colinas",{2747.70,-1120.00,-89.00,2959.30,-945.00,110.90}},
    {"Las Colinas",{2632.70,-1135.00,-89.00,2747.70,-945.00,110.90}},
    {"Las Colinas",{2281.40,-1135.00,-89.00,2632.70,-945.00,110.90}},
    {"Las Payasadas",{-354.30,2580.30,2.00,-133.60,2816.80,200.00}},
    {"Las Venturas Airport", {1236.60,1203.20,-89.00,1457.30,1883.10,110.90}},
    {"Las Venturas Airport", {1457.30,1203.20,-89.00,1777.30,1883.10,110.90}},
    {"Las Venturas Airport", {1457.30,1143.20,-89.00,1777.40,1203.20,110.90}},
    {"Las Venturas Airport", {1515.80,1586.40,-12.50,1729.90,1714.50,87.50}},
    {"Last Dime Motel",{1823.00,596.30,-89.00,1997.20,823.20,110.90}},
    {"Leafy Hollow",{-1166.90,-1856.00,0.00,-815.60,-1602.00,200.00}},
    {"Liberty City",{-1000.00,400.00,1300.00,-700.00,600.00,1400.00}},
    {"Lil' Probe Inn",{-90.20,1286.80,-3.00,153.80,1554.10,200.00}},
    {"Linden Side",{2749.90,943.20,-89.00,2923.30,1198.90,110.90}},
    {"Linden Station",{2749.90,1198.90,-89.00,2923.30,1548.90,110.90}},
    {"Linden Station",{2811.20,1229.50,-39.50,2861.20,1407.50,60.40}},
    {"Little Mexico",{1701.90,-1842.20,-89.00,1812.60,-1722.20,110.90}},
    {"Little Mexico",{1758.90,-1722.20,-89.00,1812.60,-1577.50,110.90}},
    {"Los Flores",{2581.70,-1454.30,-89.00,2632.80,-1393.40,110.90}},
    {"Los Flores",{2581.70,-1393.40,-89.00,2747.70,-1135.00,110.90}},
    {"Los Santos International",{1249.60,-2394.30,-89.00,1852.00,-2179.20,110.90}},
    {"Los Santos International",{1852.00,-2394.30,-89.00,2089.00,-2179.20,110.90}},
    {"Los Santos International",{1382.70,-2730.80,-89.00,2201.80,-2394.30,110.90}},
    {"Los Santos International",{1974.60,-2394.30,-39.00,2089.00,-2256.50,60.90}},
    {"Los Santos International",{1400.90,-2669.20,-39.00,2189.80,-2597.20,60.90}},
    {"Los Santos International",{2051.60,-2597.20,-39.00,2152.40,-2394.30,60.90}},
    {"Marina",{647.70,-1804.20,-89.00,851.40,-1577.50,110.90}},
    {"Marina",{647.70,-1577.50,-89.00,807.90,-1416.20,110.90}},
    {"Marina",{807.90,-1577.50,-89.00,926.90,-1416.20,110.90}},
    {"Market",{787.40,-1416.20,-89.00,1072.60,-1310.20,110.90}},
    {"Market",{952.60,-1310.20,-89.00,1072.60,-1130.80,110.90}},
    {"Market",{1072.60,-1416.20,-89.00,1370.80,-1130.80,110.90}},
    {"Market",{926.90,-1577.50,-89.00,1370.80,-1416.20,110.90}},
    {"Market Station",{787.40,-1410.90,-34.10,866.00,-1310.20,65.80}},
    {"Martin Bridge",{-222.10,293.30,0.00,-122.10,476.40,200.00}},
    {"Missionary Hill",{-2994.40,-811.20,0.00,-2178.60,-430.20,200.00}},
    {"Montgomery",{1119.50,119.50,-3.00,1451.40,493.30,200.00}},
    {"Montgomery",{1451.40,347.40,-6.10,1582.40,420.80,200.00}},
    {"Montgomery Intersection",{1546.60,208.10,0.00,1745.80,347.40,200.00}},
    {"Montgomery Intersection",{1582.40,347.40,0.00,1664.60,401.70,200.00}},
    {"Mulholland",{1414.00,-768.00,-89.00,1667.60,-452.40,110.90}},
    {"Mulholland",{1281.10,-452.40,-89.00,1641.10,-290.90,110.90}},
    {"Mulholland",{1269.10,-768.00,-89.00,1414.00,-452.40,110.90}},
    {"Mulholland",{1357.00,-926.90,-89.00,1463.90,-768.00,110.90}},
    {"Mulholland",{1318.10,-910.10,-89.00,1357.00,-768.00,110.90}},
    {"Mulholland",{1169.10,-910.10,-89.00,1318.10,-768.00,110.90}},
    {"Mulholland",{768.60,-954.60,-89.00,952.60,-860.60,110.90}},
    {"Mulholland",{687.80,-860.60,-89.00,911.80,-768.00,110.90}},
    {"Mulholland",{737.50,-768.00,-89.00,1142.20,-674.80,110.90}},
    {"Mulholland",{1096.40,-910.10,-89.00,1169.10,-768.00,110.90}},
    {"Mulholland",{952.60,-937.10,-89.00,1096.40,-860.60,110.90}},
    {"Mulholland",{911.80,-860.60,-89.00,1096.40,-768.00,110.90}},
    {"Mulholland",{861.00,-674.80,-89.00,1156.50,-600.80,110.90}},
    {"Mulholland Intersection",{1463.90,-1150.80,-89.00,1812.60,-768.00,110.90}},
    {"North Rock",{2285.30,-768.00,0.00,2770.50,-269.70,200.00}},
    {"Ocean Docks",{2373.70,-2697.00,-89.00,2809.20,-2330.40,110.90}},
    {"Ocean Docks",{2201.80,-2418.30,-89.00,2324.00,-2095.00,110.90}},
    {"Ocean Docks",{2324.00,-2302.30,-89.00,2703.50,-2145.10,110.90}},
    {"Ocean Docks",{2089.00,-2394.30,-89.00,2201.80,-2235.80,110.90}},
    {"Ocean Docks",{2201.80,-2730.80,-89.00,2324.00,-2418.30,110.90}},
    {"Ocean Docks",{2703.50,-2302.30,-89.00,2959.30,-2126.90,110.90}},
    {"Ocean Docks",{2324.00,-2145.10,-89.00,2703.50,-2059.20,110.90}},
    {"Ocean Flats",{-2994.40,277.40,-9.10,-2867.80,458.40,200.00}},
    {"Ocean Flats",{-2994.40,-222.50,-0.00,-2593.40,277.40,200.00}},
    {"Ocean Flats",{-2994.40,-430.20,-0.00,-2831.80,-222.50,200.00}},
    {"Octane Springs",{338.60,1228.50,0.00,664.30,1655.00,200.00}},
    {"Old Venturas Strip",{2162.30,2012.10,-89.00,2685.10,2202.70,110.90}},
    {"Palisades", {-2994.40,458.40,-6.10,-2741.00,1339.60,200.00}},
    {"Palomino Creek",{2160.20,-149.00,0.00,2576.90,228.30,200.00}},
    {"Paradiso",{-2741.00,793.40,-6.10,-2533.00,1268.40,200.00}},
    {"Pershing Square",{1440.90,-1722.20,-89.00,1583.50,-1577.50,110.90}},
    {"Pilgrim",{2437.30,1383.20,-89.00,2624.40,1783.20,110.90}},
    {"Pilgrim",{2624.40,1383.20,-89.00,2685.10,1783.20,110.90}},
    {"Pilson Intersection",{1098.30,2243.20,-89.00,1377.30,2507.20,110.90}},
    {"Pirates in Men's Pants",{1817.30,1469.20,-89.00,2027.40,1703.20,110.90}},
    {"Playa del Seville",{2703.50,-2126.90,-89.00,2959.30,-1852.80,110.90}},
    {"Prickle Pine",{1534.50,2583.20,-89.00,1848.40,2863.20,110.90}},
    {"Prickle Pine",{1117.40,2507.20,-89.00,1534.50,2723.20,110.90}},
    {"Prickle Pine",{1848.40,2553.40,-89.00,1938.80,2863.20,110.90}},
    {"Prickle Pine",{1938.80,2624.20,-89.00,2121.40,2861.50,110.90}},
    {"Queens",{-2533.00,458.40,0.00,-2329.30,578.30,200.00}},
    {"Queens",{-2593.40,54.70,0.00,-2411.20,458.40,200.00}},
    {"Queens",{-2411.20,373.50,0.00,-2253.50,458.40,200.00}},
    {"Randolph Industrial Estate",{1558.00,596.30,-89.00,1823.00,823.20,110.90}},
    {"Redsands East",{1817.30,2011.80,-89.00,2106.70,2202.70,110.90}},
    {"Redsands East",{1817.30,2202.70,-89.00,2011.90,2342.80,110.90}},
    {"Redsands East",{1848.40,2342.80,-89.00,2011.90,2478.40,110.90}},
    {"Redsands West",{1236.60,1883.10,-89.00,1777.30,2142.80,110.90}},
    {"Redsands West",{1297.40,2142.80,-89.00,1777.30,2243.20,110.90}},
    {"Redsands West",{1377.30,2243.20,-89.00,1704.50,2433.20,110.90}},
    {"Redsands West",{1704.50,2243.20,-89.00,1777.30,2342.80,110.90}},
    {"Regular Tom",{-405.70,1712.80,-3.00,-276.70,1892.70,200.00}},
    {"Richman",{647.50,-1118.20,-89.00,787.40,-954.60,110.90}},
    {"Richman",{647.50,-954.60,-89.00,768.60,-860.60,110.90}},
    {"Richman",{225.10,-1369.60,-89.00,334.50,-1292.00,110.90}},
    {"Richman",{225.10,-1292.00,-89.00,466.20,-1235.00,110.90}},
    {"Richman",{72.60,-1404.90,-89.00,225.10,-1235.00,110.90}},
    {"Richman",{72.60,-1235.00,-89.00,321.30,-1008.10,110.90}},
    {"Richman",{321.30,-1235.00,-89.00,647.50,-1044.00,110.90}},
    {"Richman",{321.30,-1044.00,-89.00,647.50,-860.60,110.90}},
    {"Richman",{321.30,-860.60,-89.00,687.80,-768.00,110.90}},
    {"Richman",{321.30,-768.00,-89.00,700.70,-674.80,110.90}},
    {"Robada Intersection",{-1119.00,1178.90,-89.00,-862.00,1351.40,110.90}},
    {"Roca Escalante",{2237.40,2202.70,-89.00,2536.40,2542.50,110.90}},
    {"Roca Escalante",{2536.40,2202.70,-89.00,2625.10,2442.50,110.90}},
    {"Rockshore East",{2537.30,676.50,-89.00,2902.30,943.20,110.90}},
    {"Rockshore West",{1997.20,596.30,-89.00,2377.30,823.20,110.90}},
    {"Rockshore West",{2377.30,596.30,-89.00,2537.30,788.80,110.90}},
    {"Rodeo", {72.60,-1684.60,-89.00,225.10,-1544.10,110.90}},
    {"Rodeo", {72.60,-1544.10,-89.00,225.10,-1404.90,110.90}},
    {"Rodeo", {225.10,-1684.60,-89.00,312.80,-1501.90,110.90}},
    {"Rodeo", {225.10,-1501.90,-89.00,334.50,-1369.60,110.90}},
    {"Rodeo", {334.50,-1501.90,-89.00,422.60,-1406.00,110.90}},
    {"Rodeo", {312.80,-1684.60,-89.00,422.60,-1501.90,110.90}},
    {"Rodeo", {422.60,-1684.60,-89.00,558.00,-1570.20,110.90}},
    {"Rodeo", {558.00,-1684.60,-89.00,647.50,-1384.90,110.90}},
    {"Rodeo", {466.20,-1570.20,-89.00,558.00,-1385.00,110.90}},
    {"Rodeo", {422.60,-1570.20,-89.00,466.20,-1406.00,110.90}},
    {"Rodeo", {466.20,-1385.00,-89.00,647.50,-1235.00,110.90}},
    {"Rodeo", {334.50,-1406.00,-89.00,466.20,-1292.00,110.90}},
    {"Royal Casino",{2087.30,1383.20,-89.00,2437.30,1543.20,110.90}},
    {"San Andreas Sound",{2450.30,385.50,-100.00,2759.20,562.30,200.00}},
    {"Santa Flora",{-2741.00,458.40,-7.60,-2533.00,793.40,200.00}},
    {"Santa Maria Beach",{342.60,-2173.20,-89.00,647.70,-1684.60,110.90}},
    {"Santa Maria Beach",{72.60,-2173.20,-89.00,342.60,-1684.60,110.90}},
    {"Shady Cabin",{-1632.80,-2263.40,-3.00,-1601.30,-2231.70,200.00}},
    {"Shady Creeks",{-1820.60,-2643.60,-8.00,-1226.70,-1771.60,200.00}},
    {"Shady Creeks",{-2030.10,-2174.80,-6.10,-1820.60,-1771.60,200.00}},
    {"Sobell Rail Yards",{2749.90,1548.90,-89.00,2923.30,1937.20,110.90}},
    {"Spinybed",{2121.40,2663.10,-89.00,2498.20,2861.50,110.90}},
    {"Starfish Casino",{2437.30,1783.20,-89.00,2685.10,2012.10,110.90}},
    {"Starfish Casino",{2437.30,1858.10,-39.00,2495.00,1970.80,60.90}},
    {"Starfish Casino",{2162.30,1883.20,-89.00,2437.30,2012.10,110.90}},
    {"Temple",{1252.30,-1130.80,-89.00,1378.30,-1026.30,110.90}},
    {"Temple",{1252.30,-1026.30,-89.00,1391.00,-926.90,110.90}},
    {"Temple",{1252.30,-926.90,-89.00,1357.00,-910.10,110.90}},
    {"Temple",{952.60,-1130.80,-89.00,1096.40,-937.10,110.90}},
    {"Temple",{1096.40,-1130.80,-89.00,1252.30,-1026.30,110.90}},
    {"Temple",{1096.40,-1026.30,-89.00,1252.30,-910.10,110.90}},
    {"The Camel's Toe",{2087.30,1203.20,-89.00,2640.40,1383.20,110.90}},
    {"The Clown's Pocket",{2162.30,1783.20,-89.00,2437.30,1883.20,110.90}},
    {"The Emerald Isle", {2011.90,2202.70,-89.00,2237.40,2508.20,110.90}},
    {"The Farm",{-1209.60,-1317.10,114.90,-908.10,-787.30,251.90}},
    {"The Four Dragons Casino",{1817.30,863.20,-89.00,2027.30,1083.20,110.90}},
    {"The High Roller",{1817.30,1283.20,-89.00,2027.30,1469.20,110.90}},
    {"The Mako Span",{1664.60,401.70,0.00,1785.10,567.20,200.00}},
    {"The Panopticon",{-947.90,-304.30,-1.10,-319.60,327.00,200.00}},
    {"The Pink Swan",{1817.30,1083.20,-89.00,2027.30,1283.20,110.90}},
    {"The Sherman Dam",{-968.70,1929.40,-3.00,-481.10,2155.20,200.00}},
    {"The Strip", {2027.40,863.20,-89.00,2087.30,1703.20,110.90}},
    {"The Strip", {2106.70,1863.20,-89.00,2162.30,2202.70,110.90}},
    {"The Strip", {2027.40,1783.20,-89.00,2162.30,1863.20,110.90}},
    {"The Strip", {2027.40,1703.20,-89.00,2137.40,1783.20,110.90}},
    {"The Visage",{1817.30,1863.20,-89.00,2106.70,2011.80,110.90}},
    {"The Visage",{1817.30,1703.20,-89.00,2027.40,1863.20,110.90}},
    {"Unity Station",{1692.60,-1971.80,-20.40,1812.60,-1932.80,79.50}},
    {"Valle Ocultado",{-936.60,2611.40,2.00,-715.90,2847.90,200.00}},
    {"Verdant Bluffs",{930.20,-2488.40,-89.00,1249.60,-2006.70,110.90}},
    {"Verdant Bluffs",{1073.20,-2006.70,-89.00,1249.60,-1842.20,110.90}},
    {"Verdant Bluffs",{1249.60,-2179.20,-89.00,1692.60,-1842.20,110.90}},
    {"Verdant Meadows",{37.00,2337.10,-3.00,435.90,2677.90,200.00}},
    {"Verona Beach",{647.70,-2173.20,-89.00,930.20,-1804.20,110.90}},
    {"Verona Beach",{930.20,-2006.70,-89.00,1073.20,-1804.20,110.90}},
    {"Verona Beach",{851.40,-1804.20,-89.00,1046.10,-1577.50,110.90}},
    {"Verona Beach",{1161.50,-1722.20,-89.00,1323.90,-1577.50,110.90}},
    {"Verona Beach",{1046.10,-1722.20,-89.00,1161.50,-1577.50,110.90}},
    {"Vinewood",{787.40,-1310.20,-89.00,952.60,-1130.80,110.90}},
    {"Vinewood",{787.40,-1130.80,-89.00,952.60,-954.60,110.90}},
    {"Vinewood",{647.50,-1227.20,-89.00,787.40,-1118.20,110.90}},
    {"Vinewood",{647.70,-1416.20,-89.00,787.40,-1227.20,110.90}},
    {"Whitewood Estates",{883.30,1726.20,-89.00,1098.30,2507.20,110.90}},
    {"Whitewood Estates",{1098.30,1726.20,-89.00,1197.30,2243.20,110.90}},
    {"Willowfield",{1970.60,-2179.20,-89.00,2089.00,-1852.80,110.90}},
    {"Willowfield",{2089.00,-2235.80,-89.00,2201.80,-1989.90,110.90}},
    {"Willowfield",{2089.00,-1989.90,-89.00,2324.00,-1852.80,110.90}},
    {"Willowfield",{2201.80,-2095.00,-89.00,2324.00,-1989.90,110.90}},
    {"Willowfield",{2541.70,-1941.40,-89.00,2703.50,-1852.80,110.90}},
    {"Willowfield",{2324.00,-2059.20,-89.00,2541.70,-1852.80,110.90}},
    {"Willowfield",{2541.70,-2059.20,-89.00,2703.50,-1941.40,110.90}},
    {"Yellow Bell Station",{1377.40,2600.40,-21.90,1492.40,2687.30,78.00}},
    {"Los Santos",{44.60,-2892.90,-242.90,2997.00,-768.00,900.00}},
    {"Las Venturas",{869.40,596.30,-242.90,2997.00,2993.80,900.00}},
    {"Bone County",{-480.50,596.30,-242.90,869.40,2993.80,900.00}},
    {"Tierra Robada",{-2997.40,1659.60,-242.90,-480.50,2993.80,900.00}},
    {"Tierra Robada",{-1213.90,596.30,-242.90,-480.50,1659.60,900.00}},
    {"San Fierro",{-2997.40,-1115.50,-242.90,-1213.90,1659.60,900.00}},
    {"Red County",{-1213.90,-768.00,-242.90,2997.00,596.30,900.00}},
    {"Flint County",{-1213.90,-2892.90,-242.90,44.60,-768.00,900.00}},
    {"Whetstone", {-2997.40,-2892.90,-242.90,-1213.90,-1115.50,900.00}}
};

new VehicleNames[212][50] =
{
    "Landstalker","Bravura","Buffalo","Linerunner","Perennial","Sentinel","Dumper","Firetruck","Trashmaster","Stretch","Manana","Infernus",
    "Voodoo","Pony","Mule","Cheetah","Ambulance","Leviathan","Moonbeam","Esperanto","Taxi","Washington","Bobcat","Mr Whoopee","BF Injection",
    "Hunter","Premier","Enforcer","Securicar","Banshee","Predator","Bus","Rhino","Barracks","Hotknife","Trailer","Previon","Coach","Cabbie",
    "Stallion","Rumpo","RC Bandit","Romero","Packer","Monster","Admiral","Squalo","Seasparrow","Pizzaboy","Tram","Trailer","Turismo","Speeder",
    "Reefer","Tropic","Flatbed","Yankee","Caddy","Solair","Berkley's RC Van","Skimmer","PCJ-600","Faggio","Freeway","RC Baron","RC Raider","Glendale",
    "Oceanic","Sanchez","Sparrow","Patriot","Quad","Coastguard","Dinghy","Hermes","Sabre","Rustler","ZR 350","Walton","Regina","Comet","BMX","Burrito","Camper","Marquis","Baggage","Dozer","Maverick",
    "News Chopper","Rancher","FBI Rancher","Virgo","Greenwood","Jetmax","Hotring","Sandking","Blista Compact","Police Maverick","Boxville","Benson","Mesa",
    "RC Goblin","Hotring Racer","Hotring Racer","Bloodring Banger","Rancher","Super GT","Elegant","Journey","Bike","Mountain Bike","Beagle","Cropdust","Stunt","Tanker","RoadTrain","Nebula",
    "Majestic","Buccaneer","Shamal","Hydra","FCR-900","NRG-500","HPV1000","Cement Truck","Tow Truck","Fortune","Cadrona","FBI Truck","Willard","Forklift","Tractor","Combine","Feltzer","Remington",
    "Slamvan","Blade","Freight","Streak","Vortex","Vincent","Bullet","Clover","Sadler","Firetruck","Hustler","Intruder","Primo","Cargobob","Tampa",
    "Sunrise","Merit","Utility","Nevada","Yosemite","Windsor","Monster","Monster","Uranus","Jester","Sultan","Stratum","Elegy",
    "Raindance","RC Tiger","Flash","Tahoma","Savanna","Bandito","Freight","Trailer","Kart","Mower","Duneride","Sweeper","Broadway","Tornado","AT-400",
    "DFT-30","Huntley","Stafford","BF-400","Newsvan","Tug","Trailer","Emperor","Wayfarer","Euros","Hotdog","Club","Trailer","Trailer","Andromada",
    "Dodo","RC Cam","Launch","Police Car (LSPD)","Police Car (SFPD)","Police Car (LVPD)","Police Ranger","Picador","S.W.A.T. Van","Alpha","Phoenix","Glendale",
    "Sadler","Luggage Trailer","Luggage Trailer","Stair Trailer","Boxburg","Farm Plow","Utility Trailer"
};

//Functions

GetCoords2DZone(Float:x, Float:y, zone[], len)
{
    for(new i; i != sizeof(ZonesList); i++)
    {
        if(x >= ZonesList[i][zArea][0] && x <= ZonesList[i][zArea][3] && y >= ZonesList[i][zArea][1] && y <= ZonesList[i][zArea][4])
            return format(zone, len, ZonesList[i][zName], 0);
   }
    
    return 0;
}

ReplaceText(string[], const search[], const replacement[], bool:ignorecase = false, pos = 0, limit = -1, maxlength = 256)
{
    if(!limit)return 0;

    new sublen = strlen(search),
        replen = strlen(replacement),
        bool:packed = ispacked(string),
        maxlen = maxlength,
        len = strlen(string),
        count = 0;

    if(packed)maxlen *= 4;
    if(!sublen)return 0;

    while(-1 != (pos = strfind(string, search, ignorecase, pos)))
    {
        strdel(string, pos, pos + sublen);
 
        len -= sublen;
 
        if(replen && len + replen < maxlen)
        {
            strins(string, replacement, pos, maxlength);
 
            pos += replen;
            len += replen;
       }
 
        if(limit != -1 && ++count >= limit)break;
   }

    return count;
}

IsValidRoleplayName(const name[])
{
    if(!name[0] || strfind(name, "_") == -1)return 0;

    else for(new i, len = strlen(name); i != len; i++)
    {
        if((!i) && (name[i] < 'A' || name[i] > 'Z'))return 0;
        
        else if((i != 0 && i < len&& name[i] == '_') && (name[i + 1] < 'A' || name[i + 1] > 'Z'))return 0;
        
        else if((name[i] < 'A' || name[i] > 'Z') && (name[i] < 'a' || name[i] > 'z') && name[i] != '_' && name[i] != '.')return 0;
   }

    return 1;
}

SendClientMessageEx(playerid, color, const text[])
{
    #define LENGHT (130)

    if(strlen(text) > LENGHT)
    {
        new firstString[LENGHT], secondString[LENGHT];

        strmid(firstString, text, 0, LENGHT+3);
        strmid(secondString, text, LENGHT - 1, LENGHT * 2);

        format(firstString, LENGHT, "%s...", firstString);
        format(secondString, LENGHT, "...%s", secondString);

        SendClientMessage(playerid, color, firstString);
        SendClientMessage(playerid, color, secondString);
   }
    else SendClientMessage(playerid, color, text);
    
    #undef LENGHT

    return 1;
}

ReturnName(playerid)
{
    new name[MAX_PLAYER_NAME];

    if(playerid == -1) name = "Yok";
    else GetPlayerName(playerid, name, MAX_PLAYER_NAME);

    return name;
}

PlayerSME(playerid, time, message[])
{
    new string[256];

    format(string,sizeof(string),"* %s %s ",ReturnRoleplayName(playerid, true), message);
    SendClientMessageEx(playerid, 0xD0AEEBFF,string);

    SetPlayerChatBubble(playerid, string, 0xD0AEEBFF, 15.0, time * 1000);

    return 1;
}

PlayerAME(playerid, message[])
{
    new string[256];

    format(string,sizeof(string),"> %s %s",ReturnRoleplayName(playerid, true), message);
    SendClientMessageEx(playerid, 0xD0AEEBFF,string);
    
    SetPlayerChatBubble(playerid, string, 0xD0AEEBFF, 15.0, 10000);

    return 1;
}

PlayerME(playerid, message[], Float:range = 15.0)
{
    new string[256];
    format(string,sizeof(string),"* %s %s", ReturnRoleplayName(playerid, true), message);
    ProxDetector(range, playerid, string, 0xD0AEEBFF, 0xD0AEEBFF, 0xD0AEEBFF, 0xD0AEEBFF, 0xD0AEEBFF);
    return 1;
}

PlayerDO(playerid, message[], Float:range = 15.0)
{
    new string[256];
    
    format(string,sizeof(string),"* %s (( %s ))", message, ReturnRoleplayName(playerid, true));
    ProxDetector(range, playerid, string, 0xD0AEEBFF, 0xD0AEEBFF, 0xD0AEEBFF, 0xD0AEEBFF, 0xD0AEEBFF);

    return 1;
}

PlayerMEPlayer(playerid, targetid, message[])
{
    new string[256];

    format(string, sizeof(string), "* %s %s %s.", ReturnRoleplayName(playerid, true), ReturnRoleplayName(targetid, true), message);
    ProxDetector(15.0, playerid, string, 0xD0AEEBFF, 0xD0AEEBFF, 0xD0AEEBFF, 0xD0AEEBFF, 0xD0AEEBFF);

    return 1;
}

IsNumeric(const str[])
{
    for(new i, l = strlen(str); i != l; i++)
    {
        if(i == 0 && str[0] == '-')continue;
        else if(str[i] < '0' || str[i] > '9')return 0;
   }
    
    return 1;
}

PreloadAnimations(playerid)
{
    for(new i; i < sizeof(g_aPreloadLibs); i++) 
        ApplyAnimation(playerid, g_aPreloadLibs[i], "null", 4.0, 0, 0, 0, 0, 0, 1);

    return 1;
}

GetPlayerSpeed(playerid)
{
    new Float:ST[4];
        
    if(IsPlayerInAnyVehicle(playerid)) GetVehicleVelocity(GetPlayerVehicleID(playerid),ST[0],ST[1],ST[2]);
    else GetPlayerVelocity(playerid,ST[0],ST[1],ST[2]);
    
    ST[3] = floatsqroot(floatpower(floatabs(ST[0]), 2.0) + floatpower(floatabs(ST[1]), 2.0) + floatpower(floatabs(ST[2]), 2.0)) * 179.28625;

    return floatround(ST[3]);
}

GetVehicleModelName(modelid) return
    (VehicleNames[modelid-400]);

IsVehicleUsed(vehicleid)
{
    foreach(new i : Player)
    {
        if(!IsPlayerConnected(i) || GetPlayerVehicleID(i) != vehicleid ||GetPlayerState(i) != PLAYER_STATE_DRIVER)continue;

        return 1;
   }
    
    return 0;
}

IsABike(vehicleid)
{
    new model = GetVehicleModel(vehicleid);
    
    switch(model)
    {
        case 509, 481, 510: return 1;
   }
    
    return 0;
}

IsAMotorBike(vehicleid)
{
    new model = GetVehicleModel(vehicleid);
    
    switch(model)
    {
        case 509, 481, 510, 462, 448, 581, 522, 461, 421, 523, 463, 586, 468, 471: return 1;
   }
    
    return 0;
}

GetWeaponNameEx(weaponid, bool:disassembledName = false)
{
    new name[50];
        
    format(name, sizeof(name), aWeaponNames[weaponid]);
    
    if(!weaponid)name = "Yok";
    if(strlen(name) == 0)name = "Yok";
    if(disassembledName == true) format(name, sizeof(name), "%s - mermi yok", name);

    return name;
}

IsFemaleSkin(playerid)
{
    new skinid = GetPlayerSkin(playerid);
    
    switch(skinid)
    {
        case 9, 11, 12, 13, 31, 38, 39, 40, 41, 53, 54, 55,
        56, 63, 64, 65, 75, 76, 77, 85, 87, 88, 89, 90,
        91, 92, 93, 129, 130, 131, 138, 139, 140, 141,
        145, 148, 150, 151, 152, 157, 169, 172, 178, 190,
        191, 192, 193, 194, 195, 196, 197, 198, 199, 201,
        205, 207, 211, 214, 215, 216, 218, 219, 224, 225,
        226, 231, 232, 233, 237, 238, 243, 244, 245, 246,
        251, 256, 257, 263, 298, 306, 307, 308, 309, 69, 10: return 1;
   }

    return 0;
}

HangupTimer(playerid); public HangupTimer(playerid)
{
    if(!IsPlayerInAnyVehicle(playerid))
    {
        if(GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_USECELLPHONE)
            return SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
   }
    
    return 0;
}

GetVehicleID(vname[])
{
    for(new i; i < 211; i++)
    {
        if(strfind(VehicleNames[i], vname, true) != -1)
            return i + 400;
   }
    
    return -1;
}

IsATruckableVehicle(vehicleid)
{
    new modelid = GetVehicleModel(vehicleid);
        
    switch(modelid)
    {
        case 600, 543, 422, 478, 554, 578, 413, 515, 459, 482, 440, 498, 499, 414, 456, 455, 450, 435, 591, 584, 428, 525, 483: return 1;
   }

    return 0;
}

InTowTruck(playerid)
{
    new vid = GetPlayerVehicleID(playerid);
        
    if(!IsPlayerInAnyVehicle(playerid) || GetVehicleModel(vid) != 525)return 0;

    return 1;
}

IsTaxi(vehicleid)
{
    if(GetVehicleModel(vehicleid) == 420 || GetVehicleModel(vehicleid) == 438)return 1;
    else if(GetVehicleModel(vehicleid) == 404 || GetVehicleModel(vehicleid) == 405 || GetVehicleModel(vehicleid) == 410 || GetVehicleModel(vehicleid) == 420 || GetVehicleModel(vehicleid) == 421 || GetVehicleModel(vehicleid) == 418 || GetVehicleModel(vehicleid) == 426 || GetVehicleModel(vehicleid) == 438 || GetVehicleModel(vehicleid) == 445 || GetVehicleModel(vehicleid) == 458 || GetVehicleModel(vehicleid) == 466 || GetVehicleModel(vehicleid) == 467 || GetVehicleModel(vehicleid) == 492) return 1;
    else if(GetVehicleModel(vehicleid) == 507 || GetVehicleModel(vehicleid) == 516 || GetVehicleModel(vehicleid) == 526 || GetVehicleModel(vehicleid) == 529 || GetVehicleModel(vehicleid) == 540 || GetVehicleModel(vehicleid) == 547 || GetVehicleModel(vehicleid) == 550 || GetVehicleModel(vehicleid) == 551) return 1;
    return 0;
}

Float:RandomFloat(Float:min, Float:max)
{
    return random(floatround(max) - floatround(min)) + min;
}

FishingBoat(vehicleid)
{
    new modelid = GetVehicleModel(vehicleid);

    if(modelid != 473 && modelid != 453 && modelid != 454 && modelid != 446 && modelid != 452 && modelid != 472 && modelid != 484 && modelid != 493 && modelid != 595)return 0;

    return 1;
}
 
IsLeapYear(year)
{
    if(year % 4 == 0) return 1;

    else return 0;
}

TimestampToDate(Timestamp, &year, &month, &day, &hour, &minute, &second, HourGMT, MinuteGMT = 0)
{
    new tmp = 2;
    year = 1970; month = 1; Timestamp -= 172800; 
    
    for(;;)
    {
        if(Timestamp >= 31536000)
        {
            year ++; Timestamp -= 31536000; tmp ++;
            if(tmp == 4)
            {
                if(Timestamp >= 31622400)
                {
                    tmp = 0;
                    year ++;
                    Timestamp -= 31622400;
               }
                else break;
           }
       }
        else break;
   }
    
    for(new i; i < 12; i ++)
    {
        if(Timestamp >= MonthTimes[i][2 + IsLeapYear(year)])
        {
            month ++;
            Timestamp -= MonthTimes[i][2 + IsLeapYear(year)];
       }
        else break;
   }
        
    day = 1 + (Timestamp / 86400); Timestamp %= 86400;
    hour = HourGMT + (Timestamp / 3600); Timestamp %= 3600;
    minute = MinuteGMT + (Timestamp / 60); second = (Timestamp % 60);
        
    if(minute > 59)
    {
        minute = 0;
        hour ++;
   }
    if(hour > 23)
    {
        hour -= 24;
        day ++;
   }
    if(day > MonthTimes[month][IsLeapYear(year)])
    {
        day = 1;
        month ++;
   }
    if(month > 12)
    {
        month = 1;
        year ++;
   }

    return 1;
}

timec(timestamp, compare = -1) 
{
    if(compare == -1) 
        compare = gettime();

    new n, sott[2];

    if(timestamp > compare) sott = "+";
    else sott = "-";

    new Float:d = (timestamp > compare) ? timestamp - compare : compare - timestamp, returnstr[32];

    if (d < 60) 
    {
        format(returnstr, sizeof(returnstr), "< 1 dakika");
        return returnstr;
   } 
    else if (d < 3600) 
    {
        n = floatround(floatdiv(d, 60.0), floatround_floor);
        format(returnstr, sizeof(returnstr), "dakika");
   } 
    else if (d < 86400) 
    {
        n = floatround(floatdiv(d, 3600.0), floatround_floor);
        format(returnstr, sizeof(returnstr), "saat");
   } 
    else if (d < 2592000) 
    {
        n = floatround(floatdiv(d, 86400.0), floatround_floor);
        format(returnstr, sizeof(returnstr), "gun");
   } 
    else if (d < 31536000) 
    {
        n = floatround(floatdiv(d, 2592000.0), floatround_floor);
        format(returnstr, sizeof(returnstr), "ay");
   } 
    else 
    {
        n = floatround(floatdiv(d, 31536000.0), floatround_floor);
        format(returnstr, sizeof(returnstr), "sene");
   }

    if(n == 1) 
        format(returnstr, sizeof(returnstr), "%s1 %s", sott, returnstr);
    else 
        format(returnstr, sizeof(returnstr), "%s%d %s", sott, n, returnstr);

    return returnstr;
}

GetWeaponSlot(weaponid)
{
    new slot;

    switch(weaponid)
    {
        case 0, 1: slot = 0;
        case 2 .. 9: slot = 1;
        case 10 .. 15: slot = 10;
        case 16 .. 18, 39: slot = 8;
        case 22 .. 24: slot =2;
        case 25 .. 27: slot = 3;
        case 28, 29, 32: slot = 4;
        case 30, 31: slot = 5;
        case 33, 34: slot = 6;
        case 35 .. 38: slot = 7;
        case 40: slot = 12;
        case 41 .. 43: slot = 9;
        case 44 .. 46: slot = 11;
   }

    return slot;
}

GetWeaponIDFromName(wname[])
{
    new name_w[64];

    format(name_w, sizeof(name_w), wname);

    if(strfind(name_w, "boş", false) != -1) 
            ReplaceText(name_w, " boş", "");

    for(new i; i < sizeof(aWeaponNames); i++) 
    {
        if(i == 19 || i == 20 || i == 21) continue;

        if(strfind(aWeaponNames[i], name_w, false) != -1) 
            return i;
   }

    return -1;
}

stock GetAmmoName(wid)
{
    new ammoName[32];

    switch(wid)
    {
        case 22, 23, 24, 28, 29, 32: ammoName = "Munizioni leggere";
        case 25, 26, 27: ammoName = "Munizioni a pallettoni";
        case 30, 31: ammoName = "Munizioni pesanti";
        case 33, 34: ammoName = "Munizioni fucile";
        default: ammoName = "Munizioni indefinite";
   }
    return ammoName;
}

GetVehicleDriver(vehicleid) 
{
    foreach(new i : Player)
    {
        if(!IsPlayerConnected(i) || GetPlayerState(i) != PLAYER_STATE_DRIVER) continue;

        if(GetPlayerVehicleID(i) == vehicleid) 
            return i;
   }

    return -1;
}

IsPlayerSprinting(playerid)
{
    new keys, ud, lr;

    GetPlayerKeys(playerid, keys, ud, lr);
    
    if(keys & KEY_WALK) 
        return 0;

    if(!ud && !lr)
        return 0;
        
    if(keys & KEY_SPRINT)
        return 1;

    return 0;
}

/*GetXYInFrontOfPos(Float:xx,Float:yy,Float:a, &Float:x2, &Float:y2, Float:distance)
{
    if(a > 360)
    {
        a = a - 360;
   }

    xx += (distance * floatsin(-a, degrees));
    yy += (distance * floatcos(-a, degrees));
    x2 = xx;
    y2 = yy;
}*/

GetXYInFrontOfPlayer(playerid, &Float:x, &Float:y, Float:distance)
{
    new Float:a;
    GetPlayerPos(playerid, x, y, a);
    GetPlayerFacingAngle(playerid, a);

    if (GetPlayerVehicleID(playerid))
    {
      GetVehicleZAngle(GetPlayerVehicleID(playerid), a);
   }

    x += (distance * floatsin(-a, degrees));
    y += (distance * floatcos(-a, degrees));

    return 1;
}


GetVehicleRelativePos(vehicleid, &Float:x, &Float:y, &Float:z, Float:xoff= 0.0, Float:yoff= 0.0, Float:zoff= 0.0) 
{
    new Float:rot; 
    GetVehicleZAngle(vehicleid, rot); 
    rot = 360 - rot; 
    GetVehiclePos(vehicleid, x, y, z); 
    x = floatsin(rot, degrees) * yoff + floatcos(rot, degrees) * xoff + x; 
    y = floatcos(rot, degrees) * yoff - floatsin(rot, degrees) * xoff + y; 
    z = zoff + z; 

    return 1;
} 

stock GetPosBehindVehicle(vehicleid, &Float:x, &Float:y, &Float:z, Float:offset=0.5)
{
    new Float:vehicleSize[3], Float:vehiclePos[3];
    GetVehiclePos(vehicleid, vehiclePos[0], vehiclePos[1], vehiclePos[2]);
    GetVehicleModelInfo(GetVehicleModel(vehicleid), VEHICLE_MODEL_INFO_SIZE, vehicleSize[0], vehicleSize[1], vehicleSize[2]);
    GetXYBehindVehicle(vehicleid, vehiclePos[0], vehiclePos[1], (vehicleSize[1]/2)+offset);
    x = vehiclePos[0];
    y = vehiclePos[1];
    z = vehiclePos[2];
    return 1;
}

GetXYBehindVehicle(vehicleid, &Float:q, &Float:w, Float:distance)
{
    new Float:a;
    GetVehiclePos(vehicleid, q, w, a);
    GetVehicleZAngle(vehicleid, a);
    q += (distance * -floatsin(-a, degrees));
    w += (distance * -floatcos(-a, degrees));
}

GetWeaponNameByID(wid)
{
    new gunname[32];

    switch (wid)
    {
        case 1 .. 17, 22 .. 43, 46: GetWeaponName(wid, gunname, 32);
        case 0: format(gunname, sizeof(gunname), "Yumruk");
        case 18: format(gunname, sizeof(gunname), "Molotof Kokteyli");
        case 44: format(gunname, sizeof(gunname), "Gece Gorus");
        case 45: format(gunname, sizeof(gunname), "Termal Gozluk");
        default: format(gunname, sizeof(gunname), "Yok");
   }

    return gunname;
}

encode_doors(bonnet, boot, driver_door, passenger_door, behind_driver_door, behind_passenger_door)
{
    #pragma unused behind_driver_door
    #pragma unused behind_passenger_door

    return bonnet | (boot << 8) | (driver_door << 16) | (passenger_door << 24);
}

ClearChat(playerid, rows)
{
    for(new j; j < rows; j++)
            SendClientMessageEx(playerid, -1, "");

    return 1;
}

IsValidVehicleModel(model)
{
    if(model >= 400 && model <= 611)
    {
        return true;
   }

    return false;
}

GetVehicleSpeed(vehicleid)
{
    new Float:x,
        Float:y,
        Float:z,
        vel;

    GetVehicleVelocity(vehicleid, x, y, z);

    vel = floatround(floatsqroot(x*x + y*y + z*z) * 180);

    return vel;
}

/*IsValidAnimLibrary(text[])
{
    for(new i; i < sizeof(g_aPreloadLibs); i++) 
        if(!strcmp(text, g_aPreloadLibs[i], false)) return 1;
    
    return 0;
}*/

SetPlayerToFacePlayer(playerid, targetid)
{
    new Float:x[2],
        Float:y[2],
        Float:z[2],
        Float:angle;

    GetPlayerPos(targetid, x[0], y[0], z[0]);
    GetPlayerPos(playerid, x[1], y[1], z[1]);

    angle = (180.0 - atan2(x[1] - x[0], y[1] - y[0]));
    SetPlayerFacingAngle(playerid, angle + (5.0 * -1));
}

OpenableDoor(modelid)
{
    static const openableDoors[] =
    {
        1495, 1498, 1535, 1557, 1536, 3089, 997,
        1492, 1494, 1493, 1499, 1504, 1507, 1567,
        1555, 2963, 19302, 19303, 1569, 1537, 2875,
        2876, 2877, 2878
    };

    for(new x; x < sizeof(openableDoors); x++) if(modelid == openableDoors[x]) return x;

    return -1;
}

ScrambleWord(s[])
{
    new new_s[64];
    new tmp[2], num, len = strlen(s);

    for(new i=0; s[i] != EOS; i++)
    {
        num = random(len);
        tmp[0] = s[i];
        tmp[1] = s[num];
        s[num] = tmp[0];
        s[i] = tmp[1];
   }

    strins(new_s, s, 0);

    return new_s;
}

CrashPlayer(id)
{
    GameTextForPlayer(id, "•¤¶§!$$%&'()*+,-./01~!@#$^&*()_-+={[}]:;'<,>.?/", 1000, 0);
    GameTextForPlayer(id, "•¤¶§!$$%&'()*+,-./01~!@#$^&*()_-+={[}]:;'<,>.?/", 2000, 1);
    GameTextForPlayer(id, "•¤¶§!$$%&'()*+,-./01~!@#$^&*()_-+={[}]:;'<,>.?/", 3000, 2);
    GameTextForPlayer(id, "•¤¶§!$$%&'()*+,-./01~!@#$^&*()_-+={[}]:;'<,>.?/", 4000, 3);
    GameTextForPlayer(id, "•¤¶§!$$%&'()*+,-./01~!@#$^&*()_-+={[}]:;'<,>.?/", 5000, 4);
    GameTextForPlayer(id, "•¤¶§!$$%&'()*+,-./01~!@#$^&*()_-+={[}]:;'<,>.?/", 6000, 5);
    GameTextForPlayer(id, "•¤¶§!$$%&'()*+,-./01~!@#$^&*()_-+={[}]:;'<,>.?/", 7000, 6);
    GameTextForPlayer(id, "•¤¶§!$$%&'()*+,-./01~!@#$^&*()_-+={[}]:;'<,>.?/", 12000, 6);
    
    return 1;
}

GetComponentPrice(componentid, &price = 200)
{
    switch(componentid)
    {
        case 1100, 1109, 1110, 1115, 1117, 1123, 1125, 1140, 1141, 1148..1157, 1159..1161, 1165..1193: price = 900;
        case 1004..1007, 1013, 1017, 1024, 1026, 1027, 1030, 1031, 1036, 1039..1042, 1047, 1048, 1051, 1052, 1056, 1057, 1062, 1063, 1069..1072, 1090, 1093..1095, 1099, 1101, 1102, 1106..1108, 1118..1122, 1124, 1133, 1134, 1137, 1142..1145: price = 700;
        case 1000..1003, 1014..1016, 1023, 1049, 1050, 1058, 1060, 1128, 1130, 1131, 1138, 1139, 1146, 1147, 1158, 1162..1164: price = 900;
        case 1018, 1022, 1028, 1029, 1034, 1037, 1043, 1046, 1059, 1064, 1065, 1066, 1089, 1092, 1104, 1105, 1113, 1114, 1126, 1127, 1129, 1132, 1135, 1136: price = 650;
        case 1019, 1020, 1021, 1032, 1033, 1035, 1038, 1053, 1054, 1055, 1061, 1067, 1068, 1088, 1091, 1103: price = 250;
        case 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1096, 1097, 1098: price = 800;
        //case 1009, 1087: price = 5000;
        //case 1008: price = 7500;
        //case 1010: price = 10000;
   }
    return price;
}

GetComponentName(componentid) return ModName[componentid-1000];

GetVehicleSpoilerCount(model, &count = 0)
{
    switch(model)
    {
        case 401, 418, 420, 426, 436, 492, 540, 542, 549, 558, 559, 560, 561, 562, 565, 580, 589, 603: count = 2;
        case 404, 410, 415, 439, 489, 491, 518, 527, 529, 546, 547, 550, 585: count = 3;
        case 405, 421, 496, 516, 517, 551: count = 4;
   }
    return count;
}

GetVehicleCompatibleSpoiler(model, count, &componentid = 0)
{
    switch(model)
    {
        case 401:
        {
            switch(count)
            {
                case 1: componentid = 1001;
                case 2: componentid = 1003;
           }
       }
        case 404:
        {
            switch(count)
            {
                case 1: componentid = 1000;
                case 2: componentid = 1002;
                case 3: componentid = 1016;
           }
       }
        case 405:
        {
            switch(count)
            {
                case 1: componentid = 1000;
                case 2: componentid = 1001;
                case 3: componentid = 1014;
                case 4: componentid = 1023;
           }
       }
        case 410:
        {
            switch(count)
            {
                case 1: componentid = 1001;
                case 2: componentid = 1003;
                case 3: componentid = 1023;
           }
       }
        case 415:
        {
            switch(count)
            {
                case 1: componentid = 1001;
                case 2: componentid = 1003;
                case 3: componentid = 1023;
           }
       }
        case 418:
        {
            switch(count)
            {
                case 1: componentid = 1002;
                case 2: componentid = 1016;
           }
       }
        case 420:
        {
            switch(count)
            {
                case 1: componentid = 1001;
                case 2: componentid = 1003;
           }
       }
        case 421:
        {
            switch(count)
            {
                case 1: componentid = 1000;
                case 2: componentid = 1014;
                case 3: componentid = 1016;
                case 4: componentid = 1023;
           }
       }
        case 426:
        {
            switch(count)
            {
                case 1: componentid = 1001;
                case 2: componentid = 1003;
           }
       }
        case 436:
        {
            switch(count)
            {
                case 1: componentid = 1001;
                case 2: componentid = 1003;
           }
       }
        case 439:
        {
            switch(count)
            {
                case 1: componentid = 1001;
                case 2: componentid = 1003;
                case 3: componentid = 1023;
           }
       }
        case 489:
        {
            switch(count)
            {
                case 1: componentid = 1000;
                case 2: componentid = 1002;
                case 3: componentid = 1016;
           }
       }
        case 491:
        {
            switch(count)
            {
                case 1: componentid = 1003;
                case 2: componentid = 1014;
                case 3: componentid = 1023;
           }
       }
        case 492:
        {
            switch(count)
            {
                case 1: componentid = 1000;
                case 2: componentid = 1016;
           }
       }
        case 496:
        {
            switch(count)
            {
                case 1: componentid = 1001;
                case 2: componentid = 1002;
                case 3: componentid = 1003;
                case 4: componentid = 1023;
           }
       }
        case 516:
        {
            switch(count)
            {
                case 1: componentid = 1000;
                case 2: componentid = 1002;
                case 3: componentid = 1015;
                case 4: componentid = 1016;
           }
       }
        case 517:
        {
            switch(count)
            {
                case 1: componentid = 1002;
                case 2: componentid = 1003;
                case 3: componentid = 1016;
                case 4: componentid = 1023;
           }
       }
        case 518:
        {
            switch(count)
            {
                case 1: componentid = 1001;
                case 2: componentid = 1003;
                case 3: componentid = 1023;
           }
       }
        case 527:
        {
            switch(count)
            {
                case 1: componentid = 1001;
                case 2: componentid = 1014;
                case 3: componentid = 1015;
           }
       }
        case 529:
        {
            switch(count)
            {
                case 1: componentid = 1001;
                case 2: componentid = 1003;
                case 3: componentid = 1023;
           }
       }
        case 540:
        {
            switch(count)
            {
                case 1: componentid = 1001;
                case 2: componentid = 1023;
           }
       }
        case 542:
        {
            switch(count)
            {
                case 1: componentid = 1014;
                case 2: componentid = 1015;
           }
       }
        case 546:
        {
            switch(count)
            {
                case 1: componentid = 1001;
                case 2: componentid = 1002;
                case 3: componentid = 1023;
           }
       }
        case 547:
        {
            switch(count)
            {
                case 1: componentid = 1000;
                case 2: componentid = 1003;
                case 3: componentid = 1016;
           }
       }
        case 549:
        {
            switch(count)
            {
                case 1: componentid = 1001;
                case 2: componentid = 1023;
           }
       }
        case 550:
        {
            switch(count)
            {
                case 1: componentid = 1001;
                case 2: componentid = 1003;
                case 3: componentid = 1023;
           }
       }
        case 551:
        {
            switch(count)
            {
                case 1: componentid = 1002;
                case 2: componentid = 1003;
                case 3: componentid = 1016;
                case 4: componentid = 1023;
           }
       }
        case 558:
        {
            switch(count)
            {
                case 1: componentid = 1163;
                case 2: componentid = 1164;
           }
       }
        case 559:
        {
            switch(count)
            {
                case 1: componentid = 1158;
                case 2: componentid = 1162;
           }
       }
        case 560:
        {
            switch(count)
            {
                case 1: componentid = 1138;
                case 2: componentid = 1139;
           }
       }
        case 561:
        {
            switch(count)
            {
                case 1: componentid = 1058;
                case 2: componentid = 1060;
           }
       }
        case 562:
        {
            switch(count)
            {
                case 1: componentid = 1146;
                case 2: componentid = 1147;
           }
       }
        case 565:
        {
            switch(count)
            {
                case 1: componentid = 1049;
                case 2: componentid = 1050;
           }
       }
        case 580:
        {
            switch(count)
            {
                case 1: componentid = 1001;
                case 2: componentid = 1023;
           }
       }
        case 585:
        {
            switch(count)
            {
                case 1: componentid = 1001;
                case 2: componentid = 1003;
                case 3: componentid = 1023;
           }
       }
        case 589:
        {
            switch(count)
            {
                case 1: componentid = 1000;
                case 2: componentid = 1016;
           }
       }
        case 603:
        {
            switch(count)
            {
                case 1: componentid = 1001;
                case 2: componentid = 1023;
           }
       }
   }
    return componentid;
}

GetVehicleHoodCount(model, &count = 0)
{
    switch(model)
    {
        case 496, 516, 518, 540, 546, 551: count = 1;
        case 401, 420, 426, 489, 492, 529, 549, 550, 589, 600: count = 2;
        case 478: count = 3;
   }
    return count;
}

GetVehicleCompatibleHood(model, count, &componentid = 0)
{
    switch(model)
    {
        case 401:
        {
            switch(count)
            {
                case 1: componentid = 1004;
                case 2: componentid = 1005;
           }
       }
        case 420:
        {
            switch(count)
            {
                case 1: componentid = 1004;
                case 2: componentid = 1005;
           }
       }
        case 426:
        {
            switch(count)
            {
                case 1: componentid = 1004;
                case 2: componentid = 1005;
           }
       }
        case 478:
        {
            switch(count)
            {
                case 1: componentid = 1004;
                case 2: componentid = 1005;
                case 3: componentid = 1012;
           }
       }
        case 489:
        {
            switch(count)
            {
                case 1: componentid = 1004;
                case 2: componentid = 1005;
           }
       }
        case 492:
        {
            switch(count)
            {
                case 1: componentid = 1004;
                case 2: componentid = 1005;
           }
       }
        case 496:
        {
            switch(count)
            {
                case 1: componentid = 1011;
           }
       }
        case 516:
        {
            switch(count)
            {
                case 1: componentid = 1004;
           }
       }
        case 518:
        {
            switch(count)
            {
                case 1: componentid = 1005;
           }
       }
        case 529:
        {
            switch(count)
            {
                case 1: componentid = 1011;
                case 2: componentid = 1012;
           }
       }
        case 540:
        {
            switch(count)
            {
                case 1: componentid = 1004;
           }
       }
        case 546:
        {
            switch(count)
            {
                case 1: componentid = 1004;
           }
       }
        case 549:
        {
            switch(count)
            {
                case 1: componentid = 1011;
                case 2: componentid = 1012;
           }
       }
        case 550:
        {
            switch(count)
            {
                case 1: componentid = 1004;
                case 2: componentid = 1005;
           }
       }
        case 551:
        {
            switch(count)
            {
                case 1: componentid = 1005;
           }
       }
        case 589:
        {
            switch(count)
            {
                case 1: componentid = 1004;
                case 2: componentid = 1005;
           }
       }
        case 600:
        {
            switch(count)
            {
                case 1: componentid = 1004;
                case 2: componentid = 1005;
           }
       }
   }
    return componentid;
}

GetVehicleExhaustCount(model, &count = 0)
{
    switch(model)
    {
        case 401, 415, 418, 420, 426, 496, 518, 534, 535, 536, 546, 558, 559, 560, 561, 562, 565, 567, 575, 576, 580, 589: count = 2;
        case 404, 410, 422, 478, 489, 500, 517, 527, 529, 540, 549, 550, 585, 600, 603: count = 3;
        case 400, 405, 421, 436, 477, 491, 516, 542, 547, 551: count = 4;
   }
    return count;
}

GetVehicleCompatibleExhaust(model, count, &componentid = 0)
{
    switch(model)
    {
        case 400:
        {
            switch(count)
            {
                case 1: componentid = 1018;
                case 2: componentid = 1019;
                case 3: componentid = 1020;
                case 4: componentid = 1021;
           }
       }
        case 401:
        {
            switch(count)
            {
                case 1: componentid = 1019;
                case 2: componentid = 1020;
           }
       }
        case 404:
        {
            switch(count)
            {
                case 1: componentid = 1019;
                case 2: componentid = 1020;
                case 3: componentid = 1021;
           }
       }
        case 405:
        {
            switch(count)
            {
                case 1: componentid = 1018;
                case 2: componentid = 1019;
                case 3: componentid = 1020;
                case 4: componentid = 1021;
           }
       }
        case 410:
        {
            switch(count)
            {
                case 1: componentid = 1019;
                case 2: componentid = 1020;
                case 3: componentid = 1021;
           }
       }
        case 415:
        {
            switch(count)
            {
                case 1: componentid = 1018;
                case 2: componentid = 1019;
           }
       }
        case 418:
        {
            switch(count)
            {
                case 1: componentid = 1020;
                case 2: componentid = 1021;
           }
       }
        case 420:
        {
            switch(count)
            {
                case 1: componentid = 1019;
                case 2: componentid = 1021;
           }
       }
        case 421:
        {
            switch(count)
            {
                case 1: componentid = 1018;
                case 2: componentid = 1019;
                case 3: componentid = 1020;
                case 4: componentid = 1021;
           }
       }
        case 422:
        {
            switch(count)
            {
                case 1: componentid = 1019;
                case 2: componentid = 1020;
                case 3: componentid = 1021;
           }
       }
        case 426:
        {
            switch(count)
            {
                case 1: componentid = 1019;
                case 2: componentid = 1021;
           }
       }
        case 436:
        {
            switch(count)
            {
                case 1: componentid = 1019;
                case 2: componentid = 1020;
                case 3: componentid = 1021;
                case 4: componentid = 1022;
           }
       }
        case 477:
        {
            switch(count)
            {
                case 1: componentid = 1018;
                case 2: componentid = 1019;
                case 3: componentid = 1020;
                case 4: componentid = 1021;
           }
       }
        case 478:
        {
            switch(count)
            {
                case 1: componentid = 1020;
                case 2: componentid = 1021;
                case 3: componentid = 1022;
           }
       }
        case 489:
        {
            switch(count)
            {
                case 1: componentid = 1018;
                case 2: componentid = 1019;
                case 3: componentid = 1020;
           }
       }
        case 491:
        {
            switch(count)
            {
                case 1: componentid = 1018;
                case 2: componentid = 1019;
                case 3: componentid = 1020;
                case 4: componentid = 1021;
           }
       }
        case 496:
        {
            switch(count)
            {
                case 1: componentid = 1019;
                case 2: componentid = 1020;
           }
       }
        case 500:
        {
            switch(count)
            {
                case 1: componentid = 1019;
                case 2: componentid = 1020;
                case 3: componentid = 1021;
           }
       }
        case 516:
        {
            switch(count)
            {
                case 1: componentid = 1018;
                case 2: componentid = 1019;
                case 3: componentid = 1020;
                case 4: componentid = 1021;
           }
       }
        case 517:
        {
            switch(count)
            {
                case 1: componentid = 1018;
                case 2: componentid = 1019;
                case 3: componentid = 1020;
           }
       }
        case 518:
        {
            switch(count)
            {
                case 1: componentid = 1018;
                case 2: componentid = 1020;
           }
       }
        case 527:
        {
            switch(count)
            {
                case 1: componentid = 1018;
                case 2: componentid = 1020;
                case 3: componentid = 1021;
           }
       }
        case 529:
        {
            switch(count)
            {
                case 1: componentid = 1018;
                case 2: componentid = 1019;
                case 3: componentid = 1020;
           }
       }
        case 534:
        {
            switch(count)
            {
                case 1: componentid = 1126;
                case 2: componentid = 1127;
           }
       }
        case 535:
        {
            switch(count)
            {
                case 1: componentid = 1113;
                case 2: componentid = 1114;
           }
       }
        case 536:
        {
            switch(count)
            {
                case 1: componentid = 1104;
                case 2: componentid = 1105;
           }
       }
        case 540:
        {
            switch(count)
            {
                case 1: componentid = 1018;
                case 2: componentid = 1019;
                case 3: componentid = 1020;
           }
       }
        case 542:
        {
            switch(count)
            {
                case 1: componentid = 1018;
                case 2: componentid = 1019;
                case 3: componentid = 1020;
                case 4: componentid = 1021;
           }
       }
        case 546:
        {
            switch(count)
            {
                case 1: componentid = 1018;
                case 2: componentid = 1019;
           }
       }
        case 547:
        {
            switch(count)
            {
                case 1: componentid = 1018;
                case 2: componentid = 1019;
                case 3: componentid = 1020;
                case 4: componentid = 1021;
           }
       }
        case 549:
        {
            switch(count)
            {
                case 1: componentid = 1018;
                case 2: componentid = 1019;
                case 3: componentid = 1020;
           }
       }
        case 550:
        {
            switch(count)
            {
                case 1: componentid = 1018;
                case 2: componentid = 1019;
                case 3: componentid = 1020;
           }
       }
        case 551:
        {
            switch(count)
            {
                case 1: componentid = 1018;
                case 2: componentid = 1019;
                case 3: componentid = 1020;
                case 4: componentid = 1021;
           }
       }
        case 558:
        {
            switch(count)
            {
                case 1: componentid = 1089;
                case 2: componentid = 1092;
           }
       }
        case 559:
        {
            switch(count)
            {
                case 1: componentid = 1065;
                case 2: componentid = 1066;
           }
       }
        case 560:
        {
            switch(count)
            {
                case 1: componentid = 1028;
                case 2: componentid = 1029;
           }
       }
        case 561:
        {
            switch(count)
            {
                case 1: componentid = 1059;
                case 2: componentid = 1064;
           }
       }
        case 562:
        {
            switch(count)
            {
                case 1: componentid = 1034;
                case 2: componentid = 1037;
           }
       }
        case 565:
        {
            switch(count)
            {
                case 1: componentid = 1045;
                case 2: componentid = 1046;
           }
       }
        case 567:
        {
            switch(count)
            {
                case 1: componentid = 1129;
                case 2: componentid = 1132;
           }
       }
        case 575:
        {
            switch(count)
            {
                case 1: componentid = 1043;
                case 2: componentid = 1044;
           }
       }
        case 576:
        {
            switch(count)
            {
                case 1: componentid = 1135;
                case 2: componentid = 1136;
           }
       }
        case 580:
        {
            switch(count)
            {
                case 1: componentid = 1018;
                case 2: componentid = 1020;
           }
       }
        case 585:
        {
            switch(count)
            {
                case 1: componentid = 1018;
                case 2: componentid = 1019;
                case 3: componentid = 1020;
           }
       }
        case 589:
        {
            switch(count)
            {
                case 1: componentid = 1018;
                case 2: componentid = 1020;
           }
       }
        case 600:
        {
            switch(count)
            {
                case 1: componentid = 1018;
                case 2: componentid = 1020;
                case 3: componentid = 1022;
           }
       }
        case 603:
        {
            switch(count)
            {
                case 1: componentid = 1018;
                case 2: componentid = 1019;
                case 3: componentid = 1020;
           }
       }
   }
    return componentid;
}

GetVehicleFBumperCount(model, &count = 0)
{
    switch(model)
    {
        case 535: count = 1;
        case 534, 536, 558, 559, 560, 561, 562, 565, 567, 575, 576: count = 2;
   }
    return count;
}

GetVehicleCompatibleFBumper(model, count, &componentid = 0)
{
    switch(model)
    {
        case 534:
        {
            switch(count)
            {
                case 1: componentid = 1179;
                case 2: componentid = 1185;
           }
       }
        case 535:
        {
            switch(count)
            {
                case 1: componentid = 1117;
           }
       }
        case 536:
        {
            switch(count)
            {
                case 1: componentid = 1181;
                case 2: componentid = 1182;
           }
       }
        case 558:
        {
            switch(count)
            {
                case 1: componentid = 1165;
                case 2: componentid = 1166;
           }
       }
        case 559:
        {
            switch(count)
            {
                case 1: componentid = 1160;
                case 2: componentid = 1173;
           }
       }
        case 560:
        {
            switch(count)
            {
                case 1: componentid = 1169;
                case 2: componentid = 1170;
           }
       }
        case 561:
        {
            switch(count)
            {
                case 1: componentid = 1155;
                case 2: componentid = 1157;
           }
       }
        case 562:
        {
            switch(count)
            {
                case 1: componentid = 1171;
                case 2: componentid = 1172;
           }
       }
        case 565:
        {
            switch(count)
            {
                case 1: componentid = 1152;
                case 2: componentid = 1153;
           }
       }
        case 567:
        {
            switch(count)
            {
                case 1: componentid = 1188;
                case 2: componentid = 1189;
           }
       }
        case 575:
        {
            switch(count)
            {
                case 1: componentid = 1174;
                case 2: componentid = 1176;
           }
       }
        case 576:
        {
            switch(count)
            {
                case 1: componentid = 1190;
                case 2: componentid = 1191;
           }
       }
   }
    return componentid;
}

GetVehicleBBumperCount(model, &count = 0)
{
    switch(model)
    {
        case 534, 536, 558, 559, 560, 561, 562, 565, 567, 575, 576: count = 2;
   }
    return count;
}

GetVehicleCompatibleBBumper(model, count, &componentid = 0)
{
    switch(model)
    {
        case 534:
        {
            switch(count)
            {
                case 1: componentid = 1178;
                case 2: componentid = 1180;
           }
       }
        case 536:
        {
            switch(count)
            {
                case 1: componentid = 1183;
                case 2: componentid = 1184;
           }
       }
        case 558:
        {
            switch(count)
            {
                case 1: componentid = 1167;
                case 2: componentid = 1168;
           }
       }
        case 559:
        {
            switch(count)
            {
                case 1: componentid = 1159;
                case 2: componentid = 1161;
           }
       }
        case 560:
        {
            switch(count)
            {
                case 1: componentid = 1140;
                case 2: componentid = 1141;
           }
       }
        case 561:
        {
            switch(count)
            {
                case 1: componentid = 1154;
                case 2: componentid = 1156;
           }
       }
        case 562:
        {
            switch(count)
            {
                case 1: componentid = 1148;
                case 2: componentid = 1149;
           }
       }
        case 565:
        {
            switch(count)
            {
                case 1: componentid = 1150;
                case 2: componentid = 1151;
           }
       }
        case 567:
        {
            switch(count)
            {
                case 1: componentid = 1186;
                case 2: componentid = 1187;
           }
       }
        case 575:
        {
            switch(count)
            {
                case 1: componentid = 1175;
                case 2: componentid = 1177;
           }
       }
        case 576:
        {
            switch(count)
            {
                case 1: componentid = 1192;
                case 2: componentid = 1193;
           }
       }
   }
    return componentid;
}

GetVehicleRoofCount(model, &count = 0)
{
    switch(model)
    {
        case 401, 418, 426, 436, 477, 489, 492, 496, 518, 529, 540, 546, 550, 551, 580, 585, 589, 600, 603: count = 1;
        case 536, 558, 559, 560, 561, 562, 565, 567: count = 2;
   }
    return count;
}

GetVehicleCompatibleRoof(model, count, &componentid = 0)
{
    switch(model)
    {
        case 401:
        {
            switch(count)
            {
                case 1: componentid = 1006;
           }
       }
        case 418:
        {
            switch(count)
            {
                case 1: componentid = 1006;
           }
       }
        case 426:
        {
            switch(count)
            {
                case 1: componentid = 1006;
           }
       }
        case 436:
        {
            switch(count)
            {
                case 1: componentid = 1006;
           }
       }
        case 477:
        {
            switch(count)
            {
                case 1: componentid = 1006;
           }
       }
        case 489:
        {
            switch(count)
            {
                case 1: componentid = 1006;
           }
       }
        case 492:
        {
            switch(count)
            {
                case 1: componentid = 1006;
           }
       }
        case 496:
        {
            switch(count)
            {
                case 1: componentid = 1006;
           }
       }
        case 518:
        {
            switch(count)
            {
                case 1: componentid = 1006;
           }
       }
        case 529:
        {
            switch(count)
            {
                case 1: componentid = 1006;
           }
       }
        case 536:
        {
            switch(count)
            {
                case 1: componentid = 1103;
                case 2: componentid = 1128;
           }
       }
        case 540:
        {
            switch(count)
            {
                case 1: componentid = 1006;
           }
       }
        case 546:
        {
            switch(count)
            {
                case 1: componentid = 1006;
           }
       }
        case 550:
        {
            switch(count)
            {
                case 1: componentid = 1006;
           }
       }
        case 551:
        {
            switch(count)
            {
                case 1: componentid = 1006;
           }
       }
        case 558:
        {
            switch(count)
            {
                case 1: componentid = 1088;
                case 2: componentid = 1091;
           }
       }
        case 559:
        {
            switch(count)
            {
                case 1: componentid = 1067;
                case 2: componentid = 1068;
           }
       }
        case 560:
        {
            switch(count)
            {
                case 1: componentid = 1032;
                case 2: componentid = 1033;
           }
       }
        case 561:
        {
            switch(count)
            {
                case 1: componentid = 1055;
                case 2: componentid = 1061;
           }
       }
        case 562:
        {
            switch(count)
            {
                case 1: componentid = 1035;
                case 2: componentid = 1038;
           }
       }
        case 565:
        {
            switch(count)
            {
                case 1: componentid = 1053;
                case 2: componentid = 1054;
           }
       }
        case 567:
        {
            switch(count)
            {
                case 1: componentid = 1130;
                case 2: componentid = 1131;
           }
       }
        case 580:
        {
            switch(count)
            {
                case 1: componentid = 1006;
           }
       }
        case 585:
        {
            switch(count)
            {
                case 1: componentid = 1006;
           }
       }
        case 589:
        {
            switch(count)
            {
                case 1: componentid = 1006;
           }
       }
        case 600:
        {
            switch(count)
            {
                case 1: componentid = 1006;
           }
       }
        case 603:
        {
            switch(count)
            {
                case 1: componentid = 1006;
           }
       }
   }
    return componentid;
}

GetVehicleWheelCount(model, &count = 0)
{
    switch(model)
    {
        case 400,401,404,405,410,415,418,420..422,426,436,439,477,478,489,491,492,496,500,516..518,527,529,534..536,540,542,546,547,549..551,558..562,565,567,575,576,580,585,589,600,603: count = 17;
        case 402,403,406..409,411..414,416,419,423,424,427..429,431..435,437,438,440..445,448,450,451,455..459,461..463,466..468,470,471,474,475,479..486,490,494,495,498,499,502..510,514,515,521..526,528,530..533,541,552,543..545,554..557,566,568,578,571..574,579,581..584,586..588,591,594,596..599,601,602,604..611: count = 17;
   }
    return count;
}

GetVehicleCompatibleWheel(model, count, &componentid = 0)
{
    switch(model)
    {
        case 400,401,404,405,410,415,418,420..422,426,436,439,477,478,489,491,492,496,500,516..518,527,529,534..536,540,542,546,547,549..551,558..562,565,567,575,576,580,585,589,600,603:
        {
            switch(count)
            {
                case 1: componentid = 1025;
                case 2: componentid = 1073;
                case 3: componentid = 1074;
                case 4: componentid = 1075;
                case 5: componentid = 1076;
                case 6: componentid = 1077;
                case 7: componentid = 1078;
                case 8: componentid = 1079;
                case 9: componentid = 1080;
                case 10: componentid = 1081;
                case 11: componentid = 1082;
                case 12: componentid = 1083;
                case 13: componentid = 1084;
                case 14: componentid = 1085;
                case 15: componentid = 1096;
                case 16: componentid = 1097;
                case 17: componentid = 1098;
           }
       }
        case 402,403,406..409,411..414,416,419,423,424,427..429,431..435,437,438,440..445,448,450,451,455..459,461..463,466..468,470,471,474,475,479..486,490,494,495,498,499,502..510,514,515,521..526,528,530..533,541,552,543..545,554..557,566,568,578,571..574,579,581..584,586..588,591,594,596..599,601,602,604..611:
        {
            switch(count)
            {
                case 1: componentid = 1025;
                case 2: componentid = 1073;
                case 3: componentid = 1074;
                case 4: componentid = 1075;
                case 5: componentid = 1076;
                case 6: componentid = 1077;
                case 7: componentid = 1078;
                case 8: componentid = 1079;
                case 9: componentid = 1080;
                case 10: componentid = 1081;
                case 11: componentid = 1082;
                case 12: componentid = 1083;
                case 13: componentid = 1084;
                case 14: componentid = 1085;
                case 15: componentid = 1096;
                case 16: componentid = 1097;
                case 17: componentid = 1098;
           }
       }
   }
    return componentid;
}

GetVehicleHydraulicCount(model, &count = 0)
{
    switch(model)
    {
        case 400,401,404,405,410,415,418,420..422,426,436,439,477,478,489,491,492,496,500,516..518,527,529,534..536,540,542,546,547,549..551,558..562,565,567,575,576,580,585,589,600,603: count = 1;
        case 402,403,406..409,411..414,416,419,423,424,427..429,431..435,437,438,440..445,448,450,451,455..459,461..463,466..468,470,471,474,475,479..486,490,494,495,498,499,502..510,514,515,521..526,528,530..533,541,552,543..545,554..557,566,568,578,571..574,579,581..584,586..588,591,594,596..599,601,602,604..611: count = 1;
   }
    return count;
}

GetVehicleCompatibleHydraulic(model, count, &componentid = 0)
{
    switch(model)
    {
        case 400,401,404,405,410,415,418,420..422,426,436,439,477,478,489,491,492,496,500,516..518,527,529,534..536,540,542,546,547,549..551,558..562,565,567,575,576,580,585,589,600,603:
        {
            switch(count)
            {
                case 1: componentid = 1087;
           }
       }
        case 402,403,406..409,411..414,416,419,423,424,427..429,431..435,437,438,440..445,448,450,451,455..459,461..463,466..468,470,471,474,475,479..486,490,494,495,498,499,502..510,514,515,521..526,528,530..533,541,552,543..545,554..557,566,568,578,571..574,579,581..584,586..588,591,594,596..599,601,602,604..611:
        {
            switch(count)
            {
                case 1: componentid = 1087;
           }
       }
   }
    return componentid;
}

/*GetVehicleNitroCount(model, &count = 0)
{
    switch(model)
    {
        case 400,401,404,405,410,415,418,420..422,426,436,439,477,478,489,491,492,496,500,516..518,527,529,534..536,540,542,546,547,549..551,558..562,565,567,575,576,580,585,589,600,603: count = 3;
        case 402,403,406..409,411..414,416,419,423,424,427..429,431..435,437,438,440..445,448,450,451,455..459,461..463,466..468,470,471,474,475,479..486,490,494,495,498,499,502..510,514,515,521..526,528,530..533,541,552,543..545,554..557,566,568,578,571..574,579,581..584,586..588,591,594,596..599,601,602,604..611: count = 3;
   }
    return count;
}

GetVehicleCompatibleNitro(model, count, &componentid = 0)
{
    switch(model)
    {
        case 400,401,404,405,410,415,418,420..422,426,436,439,477,478,489,491,492,496,500,516..518,527,529,534..536,540,542,546,547,549..551,558..562,565,567,575,576,580,585,589,600,603:
        {
            switch(count)
            {
                case 1: componentid = 1009;
                case 2: componentid = 1008;
                case 3: componentid = 1010;
           }
       }
        case 402,403,406..409,411..414,416,419,423,424,427..429,431..435,437,438,440..445,448,450,451,455..459,461..463,466..468,470,471,474,475,479..486,490,494,495,498,499,502..510,514,515,521..526,528,530..533,541,552,543..545,554..557,566,568,578,571..574,579,581..584,586..588,591,594,596..599,601,602,604..611:
        {
            switch(count)
            {
                case 1: componentid = 1009;
                case 2: componentid = 1008;
                case 3: componentid = 1010;
           }
       }
   }
    return componentid;
}*/

stock GetVehicleRightSSCount(model, &count = 0)
{
    switch(model)
    {
        case 401, 404, 410, 415, 422, 436, 439, 477, 491, 496, 516, 517, 518, 527, 529, 536, 540, 546, 549, 575, 576, 580, 585, 589, 600, 603: count = 1;
        case 534, 535, 558..562, 565: count = 2;
   }
    return count;
}

stock GetVehicleCompatibleRightSS(model, count, &componentid = 0)
{
    switch(model)
    {
        case 401:
        {
            switch(count)
            {
                case 1: componentid = 1007;
           }
       }
        case 404:
        {
            switch(count)
            {
                case 1: componentid = 1007;
           }
       }
        case 410:
        {
            switch(count)
            {
                case 1: componentid = 1007;
           }
       }
        case 415:
        {
            switch(count)
            {
                case 1: componentid = 1007;
           }
       }
        case 422:
        {
            switch(count)
            {
                case 1: componentid = 1007;
           }
       }
        case 436:
        {
            switch(count)
            {
                case 1: componentid = 1007;
           }
       }
        case 439:
        {
            switch(count)
            {
                case 1: componentid = 1007;
           }
       }
        case 477:
        {
            switch(count)
            {
                case 1: componentid = 1007;
           }
       }
        case 491:
        {
            switch(count)
            {
                case 1: componentid = 1007;
           }
       }
        case 496:
        {
            switch(count)
            {
                case 1: componentid = 1007;
           }
       }
        case 516:
        {
            switch(count)
            {
                case 1: componentid = 1007;
           }
       }
        case 517:
        {
            switch(count)
            {
                case 1: componentid = 1007;
           }
       }
        case 518:
        {
            switch(count)
            {
                case 1: componentid = 1007;
           }
       }
        case 527:
        {
            switch(count)
            {
                case 1: componentid = 1007;
           }
       }
        case 529:
        {
            switch(count)
            {
                case 1: componentid = 1007;
           }
       }
        case 534:
        {
            switch(count)
            {
                case 1: componentid = 1106;
                case 2: componentid = 1122;
           }
       }
        case 535:
        {
            switch(count)
            {
                case 1: componentid = 1118;
                case 2: componentid = 1119;
           }
       }
        case 536:
        {
            switch(count)
            {
                case 1: componentid = 1108;
           }
       }
        case 540:
        {
            switch(count)
            {
                case 1: componentid = 1007;
           }
       }
        case 546:
        {
            switch(count)
            {
                case 1: componentid = 1007;
           }
       }
        case 549:
        {
            switch(count)
            {
                case 1: componentid = 1007;
           }
       }
        case 558:
        {
            switch(count)
            {
                case 1: componentid = 1090;
                case 2: componentid = 1095;
           }
       }
        case 559:
        {
            switch(count)
            {
                case 1: componentid = 1069;
                case 2: componentid = 1070;
           }
       }
        case 560:
        {
            switch(count)
            {
                case 1: componentid = 1026;
                case 2: componentid = 1031;
           }
       }
        case 561:
        {
            switch(count)
            {
                case 1: componentid = 1056;
                case 2: componentid = 1057;
           }
       }
        case 562:
        {
            switch(count)
            {
                case 1: componentid = 1036;
                case 2: componentid = 1041;
           }
       }
        case 565:
        {
            switch(count)
            {
                case 1: componentid = 1047;
                case 2: componentid = 1048;
           }
       }
        case 567:
        {
            switch(count)
            {
                case 1: componentid = 1133;
           }
       }
        case 575:
        {
            switch(count)
            {
                case 1: componentid = 1042;
           }
       }
        case 576:
        {
            switch(count)
            {
                case 1: componentid = 1134;
           }
       }
        case 580:
        {
            switch(count)
            {
                case 1: componentid = 1007;
           }
       }
        case 585:
        {
            switch(count)
            {
                case 1: componentid = 1007;
           }
       }
        case 589:
        {
            switch(count)
            {
                case 1: componentid = 1007;
           }
       }
        case 600:
        {
            switch(count)
            {
                case 1: componentid = 1007;
           }
       }
        case 603:
        {
            switch(count)
            {
                case 1: componentid = 1007;
           }
       }
   }
    return componentid;
}

stock GetVehicleLeftSSCount(model, &count = 0)
{
    switch(model)
    {
        case 401, 404, 410, 415, 422, 436, 439, 477, 491, 496, 516, 517, 518, 527, 529, 536, 540, 546, 549, 575, 576, 580, 585, 589, 600, 603: count = 1;
        case 534, 535, 558..562, 565: count = 2;
   }
    return count;
}

stock GetVehicleCompatibleLeftSS(model, count, &componentid = 0)
{
    switch(model)
    {
        case 401:
        {
            switch(count)
            {
                case 1: componentid = 1017;
           }
       }
        case 404:
        {
            switch(count)
            {
                case 1: componentid = 1017;
           }
       }
        case 410:
        {
            switch(count)
            {
                case 1: componentid = 1017;
           }
       }
        case 415:
        {
            switch(count)
            {
                case 1: componentid = 1017;
           }
       }
        case 422:
        {
            switch(count)
            {
                case 1: componentid = 1017;
           }
       }
        case 436:
        {
            switch(count)
            {
                case 1: componentid = 1017;
           }
       }
        case 439:
        {
            switch(count)
            {
                case 1: componentid = 1017;
           }
       }
        case 477:
        {
            switch(count)
            {
                case 1: componentid = 1017;
           }
       }
        case 491:
        {
            switch(count)
            {
                case 1: componentid = 1017;
           }
       }
        case 496:
        {
            switch(count)
            {
                case 1: componentid = 1017;
           }
       }
        case 516:
        {
            switch(count)
            {
                case 1: componentid = 1017;
           }
       }
        case 517:
        {
            switch(count)
            {
                case 1: componentid = 1017;
           }
       }
        case 518:
        {
            switch(count)
            {
                case 1: componentid = 1017;
           }
       }
        case 527:
        {
            switch(count)
            {
                case 1: componentid = 1017;
           }
       }
        case 529:
        {
            switch(count)
            {
                case 1: componentid = 1017;
           }
       }
        case 534:
        {
            switch(count)
            {
                case 1: componentid = 1101;
                case 2: componentid = 1124;
           }
       }
        case 535:
        {
            switch(count)
            {
                case 1: componentid = 1120;
                case 2: componentid = 1121;
           }
       }
        case 536:
        {
            switch(count)
            {
                case 1: componentid = 1107;
           }
       }
        case 540:
        {
            switch(count)
            {
                case 1: componentid = 1017;
           }
       }
        case 546:
        {
            switch(count)
            {
                case 1: componentid = 1017;
           }
       }
        case 549:
        {
            switch(count)
            {
                case 1: componentid = 1017;
           }
       }
        case 558:
        {
            switch(count)
            {
                case 1: componentid = 1093;
                case 2: componentid = 1094;
           }
       }
        case 559:
        {
            switch(count)
            {
                case 1: componentid = 1071;
                case 2: componentid = 1072;
           }
       }
        case 560:
        {
            switch(count)
            {
                case 1: componentid = 1027;
                case 2: componentid = 1030;
           }
       }
        case 561:
        {
            switch(count)
            {
                case 1: componentid = 1062;
                case 2: componentid = 1063;
           }
       }
        case 562:
        {
            switch(count)
            {
                case 1: componentid = 1039;
                case 2: componentid = 1040;
           }
       }
        case 565:
        {
            switch(count)
            {
                case 1: componentid = 1051;
                case 2: componentid = 1052;
           }
       }
        case 567:
        {
            switch(count)
            {
                case 1: componentid = 1102;
           }
       }
        case 575:
        {
            switch(count)
            {
                case 1: componentid = 1099;
           }
       }
        case 576:
        {
            switch(count)
            {
                case 1: componentid = 1137;
           }
       }
        case 580:
        {
            switch(count)
            {
                case 1: componentid = 1017;
           }
       }
        case 585:
        {
            switch(count)
            {
                case 1: componentid = 1017;
           }
       }
        case 589:
        {
            switch(count)
            {
                case 1: componentid = 1017;
           }
       }
        case 600:
        {
            switch(count)
            {
                case 1: componentid = 1017;
           }
       }
        case 603:
        {
            switch(count)
            {
                case 1: componentid = 1017;
           }
       }
   }
    return componentid;
}

stock GetVehiclePaintJobCount(model, &count = 0)
{
    switch(model)
	{
        case 483: count = 1;
        case 575: count = 2;
        case 534, 535, 536, 558..562, 565, 567, 576: count = 3;
	}
    return count;
}

stock GetVehicleCompatiblePaintJob(model, count, &componentid = 0)
{
    switch(model)
    {
        case 483:
        {
            switch(count)
            {
                case 1: componentid = 0;
           }
       }
        case 534:
        {
            switch(count)
            {
                case 1: componentid = 0;
                case 2: componentid = 1;
                case 3: componentid = 2;
           }
       }
        case 535:
        {
            switch(count)
            {
                case 1: componentid = 0;
                case 2: componentid = 1;
                case 3: componentid = 2;
           }
       }
        case 536:
        {
            switch(count)
            {
                case 1: componentid = 0;
                case 2: componentid = 1;
                case 3: componentid = 2;
           }
       }
        case 558..562:
        {
            switch(count)
            {
                case 1: componentid = 0;
                case 2: componentid = 1;
                case 3: componentid = 2;
           }
       }
        case 565:
        {
            switch(count)
            {
                case 1: componentid = 0;
                case 2: componentid = 1;
                case 3: componentid = 2;
           }
       }
        case 567:
        {
            switch(count)
            {
                case 1: componentid = 0;
                case 2: componentid = 1;
                case 3: componentid = 2;
           }
       }
        case 575:
        {
            switch(count)
            {
                case 1: componentid = 0;
                case 2: componentid = 1;
           }
       }
        case 576:
        {
            switch(count)
            {
                case 1: componentid = 0;
                case 2: componentid = 1;
                case 3: componentid = 2;
           }
       }
   }
    return componentid;
}

GetVehicleComponentCount(category, model)
{
    switch(category)
    {
        case 0: return GetVehicleSpoilerCount(model);
        case 1: return GetVehicleHoodCount(model);
        case 2: return GetVehicleExhaustCount(model);
        case 3: return GetVehicleFBumperCount(model);
        case 4: return GetVehicleBBumperCount(model);
        case 5: return GetVehicleRoofCount(model);
        case 6: return GetVehicleWheelCount(model);
        case 7: return GetVehicleHydraulicCount(model);
//        case 8: return GetVehicleNitroCount(model);
        case 8: return GetVehicleLeftSSCount(model);
        case 9: return GetVehiclePaintJobCount(model);
   }

    return 0;
}

GetVehicleCompatibleComponent(category, model, listitem)
{
    switch(category)
    {
        case 0: return GetVehicleCompatibleSpoiler(model, listitem);
        case 1: return GetVehicleCompatibleHood(model, listitem);
        case 2: return GetVehicleCompatibleExhaust(model, listitem);
        case 3: return GetVehicleCompatibleFBumper(model, listitem);
        case 4: return GetVehicleCompatibleBBumper(model, listitem);
        case 5: return GetVehicleCompatibleRoof(model, listitem);
        case 6: return GetVehicleCompatibleWheel(model, listitem);
        case 7: return GetVehicleCompatibleHydraulic(model, listitem);
        //case 8: return GetVehicleCompatibleNitro(model, listitem);
        case 8: return GetVehicleCompatibleLeftSS(model, listitem);
        case 9: return GetVehicleCompatiblePaintJob(model, listitem);
   }

    return 0;
}

SetPlayerTuningCameraPos(playerid, category)
{
    switch(category)
    {
        case 0:
        {
            SetPlayerCameraPos(playerid, 441.1662, -1302.0037, 18.0385);
            SetPlayerCameraLookAt(playerid, 440.2185, -1301.6881, 17.6184);
       }
        case 1:
        {
            InterpolateCameraPos(playerid, 441.1662, -1302.0037, 18.0385, 433.8757, -1306.9038, 17.3670, 2000, CAMERA_MOVE);
            InterpolateCameraLookAt(playerid, 440.2185, -1301.6881, 17.6184, 433.8736, -1305.9052, 16.9670, 2000, CAMERA_MOVE);
       }
        case 2:
        {
            InterpolateCameraPos(playerid, 433.8757, -1306.9038, 17.3670, 434.0576, -1291.3750, 14.7338, 2000, CAMERA_MOVE);
            InterpolateCameraLookAt(playerid, 433.8736, -1305.9052, 16.9670, 434.0497, -1292.3737, 14.6737, 2000, CAMERA_MOVE);
       }
        case 3:
        {
            InterpolateCameraPos(playerid, 434.0576, -1291.3750, 14.7338, 434.3085, -1308.4880, 15.5030, 2000, CAMERA_MOVE);
            InterpolateCameraLookAt(playerid, 434.0497, -1292.3737, 14.6737, 434.2510, -1307.4908, 15.4430, 2000, CAMERA_MOVE);
       }
        case 4:
        {
            InterpolateCameraPos(playerid, 434.3085, -1308.4880, 15.5030, 434.0576, -1291.3750, 14.7338, 2000, CAMERA_MOVE);
            InterpolateCameraLookAt(playerid, 434.2510, -1307.4908, 15.4430, 434.0497, -1292.3737, 14.6737, 2000, CAMERA_MOVE);
       }
        case 5:
        {
            InterpolateCameraPos(playerid, 434.0576, -1291.3750, 14.7338, 434.1084, -1302.1560, 18.7596, 2000, CAMERA_MOVE);
            InterpolateCameraLookAt(playerid, 434.0497, -1292.3737, 14.6737, 434.0650, -1301.1581, 17.5145, 2000, CAMERA_MOVE);
       }
        case 6:
        {
            InterpolateCameraPos(playerid, 434.1084, -1302.1560, 18.7596, 437.3644, -1301.3735, 15.4735, 2000, CAMERA_MOVE);
            InterpolateCameraLookAt(playerid, 434.0650, -1301.1581, 17.5145, 436.5263, -1300.8302, 15.2985, 2000, CAMERA_MOVE);
       }
        case 7:
        {
            InterpolateCameraPos(playerid, 437.3644, -1301.3735, 15.4735, 437.6285, -1305.2942, 15.9692, 2000, CAMERA_MOVE);
            InterpolateCameraLookAt(playerid, 436.5263, -1300.8302, 15.2985, 437.0403, -1304.4867, 15.7142, 2000, CAMERA_MOVE);
       }
        case 8:
        {
            InterpolateCameraPos(playerid, 437.6285, -1305.2942, 15.9692, 434.1383, -1293.2971, 19.6626, 2000, CAMERA_MOVE);
            InterpolateCameraLookAt(playerid, 437.0403, -1304.4867, 15.7142, 434.1313, -1294.2961, 18.7776, 2000, CAMERA_MOVE);
       }
        case 9:
        {
            InterpolateCameraPos(playerid, 434.1383, -1293.2971, 19.6626, 438.7916, -1299.0066, 15.9129, 2000, CAMERA_MOVE);
            InterpolateCameraLookAt(playerid, 434.1313, -1294.2961, 18.7776, 437.7929, -1299.0272, 15.7329, 2000, CAMERA_MOVE);
       }
        case 10:
        {
            InterpolateCameraPos(playerid, 438.7916, -1299.0066, 15.9129, 433.8757, -1306.9038, 17.3670, 2000, CAMERA_MOVE);
            InterpolateCameraLookAt(playerid, 437.7929, -1299.0272, 15.7329, 433.8736, -1305.9052, 16.9670, 2000, CAMERA_MOVE);
       }
        default: return 0;
   }
    
    return 1;
}

stock ArraySort(array[], size)
{
    new i, j, app;
        
    for(i = 1; i < size; i++)
    {
        app = array[i];

        for(j = i - 1; (j >= 0) && (array[j] > app); j--)
        {
            array[j + 1 ] = array[j];
       }
        
        array[j + 1] = app;
   }

    return 1;
}

GetWeaponModel(weaponid)
{
    switch(weaponid)
    {
        case 1:
            return 331;

        case 2..8:
            return weaponid+331;

        case 9:
            return 341;

        case 10..15:
            return weaponid+311;

        case 16..18:
            return weaponid+326;

        case 22..29:
            return weaponid+324;

        case 30,31:
            return weaponid+325;

        case 32:
            return 372;

        case 33..45:
            return weaponid+324;

        case 46:
            return 371;
    }
    
    return 0;
}

/*iswheelmodel(modelid) {
	
	new wheel_models[17] = {1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1096, 1097, 1098};
	
	for(new i, j = sizeof(wheel_models); i < j; i++)
		
		if (modelid == wheel_models[i])
			return true;
		
	}
	
	return false;
}

IllegalCarNitroIde(carmodel) {
	
	new illegalvehs[29] = { 581, 523, 462, 521, 463, 522, 461, 448, 468, 586, 509, 481, 510, 472, 473, 493, 595, 484, 430, 453, 452, 446, 454, 590, 569, 537, 538, 570, 449 };
	
	foreach(illegalvehs, I) {
		
		if (carmodel == illegalvehs[I])
			return true;
		
	}
	
	return false;
}

// assumes player is in a car - make sure it is.
illegal_nos_vehicle(PlayerID) {
	
	new carid = GetPlayerVehicleID(PlayerID);
	new playercarmodel = GetVehicleModel(carid);
	
	return IllegalCarNitroIde(playercarmodel);
	
}

stock islegalcarmod(vehicleide, componentid) {
	
	new modok = false;
	
	// stereo, hydraulics & nos (1x 2x 3x) are special.
	if ( (iswheelmodel(componentid)) || (componentid == 1086) || (componentid == 1087) || ((componentid >= 1008) && (componentid <= 1010))) {
		
		new nosblocker = IllegalCarNitroIde(vehicleide);
		
		if (!nosblocker)
			modok = true;
		
	} else {
		
		// check if the specified model CAN use this particular mod.
		foreach(legalmods, I) {
			
			if (legalmods[I][0] == vehicleide) { // first is car IDE
				
				for(new J = 1; J < 22; J++) { // start with 1
					if (legalmods[I][J] == componentid)
						modok = true;
				}
				
			}
			
		}
		
	}
	
	return modok;
}*/
